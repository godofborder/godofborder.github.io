{"title":"PYTHON第4章基础习题","uid":"da3d3c8426ca2b127d2146bea8ac8e9f","slug":"python-cp4","date":"2022-03-12T03:48:27.000Z","updated":"2023-03-09T09:36:31.166Z","comments":true,"path":"api/articles/python-cp4.json","keywords":null,"cover":"https://s1.ax1x.com/2022/03/14/bjepjg.jpg","content":"<h1 id=\"Chapter4-列表\"><a href=\"#Chapter4-列表\" class=\"headerlink\" title=\"Chapter4.列表\"></a>Chapter4.列表</h1><h2 id=\"4-1-删除列表中的最大元素和最小元素\"><a href=\"#4-1-删除列表中的最大元素和最小元素\" class=\"headerlink\" title=\"4.1 删除列表中的最大元素和最小元素\"></a>4.1 删除列表中的最大元素和最小元素</h2><p>【问题描述】</p>\n<p>读入一个整数列表，输出删除最大元素和最小元素后的列表。最大元素和最小元素可能有多个。<br>【输入形式】</p>\n<p>输入列表，包括方括号<br>【输出形式】</p>\n<p>直接用print输出列表<br>【样例输入】</p>\n<p>[1,2,3,4,5,6,1,7,7]<br>【样例输出】</p>\n<p>[2, 3, 4, 5, 6]<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">a&#x3D;eval(input())\nmax&#x3D;max(a)\nmin&#x3D;min(a)\na&#x3D;[i for i in a if i!&#x3D;max and i!&#x3D;min]\nprint(a)</code></pre>\n\n<h2 id=\"4-2-把姓名和成绩列表合并后按照成绩升序排列\"><a href=\"#4-2-把姓名和成绩列表合并后按照成绩升序排列\" class=\"headerlink\" title=\"4.2 把姓名和成绩列表合并后按照成绩升序排列\"></a>4.2 把姓名和成绩列表合并后按照成绩升序排列</h2><p>【问题描述】</p>\n<p>已知一个列表存放学生姓名，另外一个列表存放学生成绩。把姓名和成绩配对后，形成一个嵌套列表，按照成绩升序输出列表。<br>【输入形式】</p>\n<p>第一行输入姓名，每个姓名用逗号分隔。第二行输入成绩，按照逗号分隔。<br>【输出形式】</p>\n<p>直接用print输出列表<br>【样例输入】</p>\n<p>tom,james,jack</p>\n<p>89,34,78<br>【样例输出】</p>\n<p>[[‘james’, 34], [‘jack’, 78], [‘tom’, 89]]<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from operator import itemgetter\nnames&#x3D;input().split(&quot;,&quot;)\ngrades&#x3D;eval(input())\nlst&#x3D;[[],[],[]]\nx&#x3D;0\nfor i in names:\n    lst[x].append(i)\n    x+&#x3D;1\nx&#x3D;0\nfor i in grades:\n    lst[x].append(i)\n    x+&#x3D;1\nlst&#x3D;sorted(lst,key&#x3D;itemgetter(1))\nprint(lst)\n</code></pre>\n\n<h2 id=\"4-3-把分布在两个列表中的姓名和成绩配对后形成一个列表\"><a href=\"#4-3-把分布在两个列表中的姓名和成绩配对后形成一个列表\" class=\"headerlink\" title=\"4.3 把分布在两个列表中的姓名和成绩配对后形成一个列表\"></a>4.3 把分布在两个列表中的姓名和成绩配对后形成一个列表</h2><p>【问题描述】</p>\n<p>已知一个列表中存放的是一些学生的姓名，另外一个列表存放的是学生对应的考试成绩。两个列表长度相同。要求，把姓名和对应的成绩进行组合，形成一个列表。该列表包含一个嵌套列表，每个子列都是姓名和对应的成绩。最后输出形成的新列表。<br>【输入形式】</p>\n<p>分两行输入，第一行输入姓名，按照字符串的方式输入，多个姓名之间用逗号分隔。第二行输入成绩，包含方括号，元素之间用英文逗号分隔。<br>【输出形式】</p>\n<p>直接用print输出新的列表。<br>【样例输入】</p>\n<p>tom,jack,jone,mike</p>\n<p>[88,89,34,90]<br>【样例输出】</p>\n<p>[[‘tom’, 88], [‘jack’, 89], [‘jone’, 34], [‘mike’, 90]]<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">names&#x3D;input().split(&quot;,&quot;)\ngrades&#x3D;eval(input())\nlst&#x3D;[[],[],[]]\nx&#x3D;0\nfor i in names:\n    lst[x].append(i)\n    x+&#x3D;1\nx&#x3D;0\nfor i in grades:\n    lst[x].append(i)\n    x+&#x3D;1\nprint(lst)\n</code></pre>\n\n<h2 id=\"4-4-生成指定长度的等差数列\"><a href=\"#4-4-生成指定长度的等差数列\" class=\"headerlink\" title=\"4.4 生成指定长度的等差数列\"></a>4.4 生成指定长度的等差数列</h2><p>【问题描述】</p>\n<p>输入三个正整数n，m，l，生成指定长度的等差数列，存入列表中。其中n表示起始值，m表示列表元素的数量，l表示公差。<br>【输入形式】</p>\n<p>在同一行输入n，m，l三个值，中间用英文逗号分隔。<br>【输出形式】</p>\n<p>打印输出列表<br>【样例输入】</p>\n<p>2,3,2<br>【样例输出】</p>\n<p>[2, 4, 6]</p>\n<p>【样例说明】</p>\n<p>第一个数字表示数列的起始值，第二个数字表示数据的个数，第三个数字表示差。<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">n,m,l&#x3D;input().split(&quot;,&quot;)\nn&#x3D;int(n)\nm&#x3D;int(m)\nl&#x3D;int(l)\nlst&#x3D;[x for x in range(n,n+m*l,l)]\nprint(lst)\n</code></pre>\n\n<h2 id=\"4-5-删除列表中指定位置的元素\"><a href=\"#4-5-删除列表中指定位置的元素\" class=\"headerlink\" title=\"4.5 删除列表中指定位置的元素\"></a>4.5 删除列表中指定位置的元素</h2><p>【问题描述】</p>\n<p>读入一个列表lst和正整数n和m，然后删除n~m之间的元素，不包括m位置的元素，其中n小于或者等于m。如果输入的n和m不在列表lst的下标范围内，则输出”error”。<br>【输入形式】</p>\n<p>第一行输入列表。包含方括号，列表元素用逗号分隔。</p>\n<p>第二行输入两个整数n和m，中间用一个逗号分割。<br>【输出形式】</p>\n<p>直接用print输出列表<br>【样例输入1】</p>\n<p>[1,2,3,4,5,6,7]</p>\n<p>2,3<br>【样例输出1】</p>\n<p>[1,2,4,5,6,7]</p>\n<p>【样例输入2】</p>\n<p>[1,2,3,4,5,6]</p>\n<p>7,3<br>【样例输出2】</p>\n<p>error</p>\n<p>【样例说明】</p>\n<p>样例1：输入列表[1,2,3,4,5,6,7]和正整数2,3，则删除列表第2位置元素，打印输出[1,2,4,5,6,7]</p>\n<p>样例2：输入列表[1,2,3,4,5,6]和正整数7,3，7不在列表下标的范围之内，输出“error”<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">lst&#x3D;eval(input())\nn,m&#x3D;input().split(&quot;,&quot;)\nn&#x3D;int(n)\nm&#x3D;int(m)\nif n &gt;&#x3D; len(lst) or m &gt;&#x3D;len(lst):\n    print(&quot;error&quot;)\nelse: \n    del lst[n:m]\n    print(lst)\n</code></pre>\n\n<h2 id=\"4-6-找出自然数列表中的素数，并放入另外一个列表，然后输出找出的素数\"><a href=\"#4-6-找出自然数列表中的素数，并放入另外一个列表，然后输出找出的素数\" class=\"headerlink\" title=\"4.6 找出自然数列表中的素数，并放入另外一个列表，然后输出找出的素数\"></a>4.6 找出自然数列表中的素数，并放入另外一个列表，然后输出找出的素数</h2><p>【问题描述】</p>\n<p>读入一个自然数构成的列表，找出其中的每一个素数，然后放入另外一个列表，并输出这个列表。<br>【输入形式】</p>\n<p>按照列表的形式输入，包括方括号，元素之间用逗号分隔。<br>【输出形式】</p>\n<p>直接用print输出列表<br>【样例输入】</p>\n<p>[2,3,5,7,9,11,23]</p>\n<p>【样例输出】</p>\n<p>[2, 3, 5, 7, 11, 23]<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">lst&#x3D;eval(input())\nout&#x3D;[]\nfor x in lst:\n    if x&gt;1:\n        for i in range(2,x):\n            if x%i&#x3D;&#x3D;0:\n                break\n        else:\n            out.append(x)\nprint(out)\n</code></pre>\n\n<h2 id=\"4-7-计算整数列表平均值-根据结果判断是否输出小数部分）\"><a href=\"#4-7-计算整数列表平均值-根据结果判断是否输出小数部分）\" class=\"headerlink\" title=\"4.7 计算整数列表平均值(根据结果判断是否输出小数部分）\"></a>4.7 计算整数列表平均值(根据结果判断是否输出小数部分）</h2><p>【问题描述】</p>\n<p>输入一个整数列表，计算所有元素的平均值，如果结果中小数为0，请只输出整数部分，如果结果中的小数部分不为0，则输出结果保留两位小数。<br>【输入形式】</p>\n<p>从键盘输入列表，包含方括号，列表元素用逗号分隔。</p>\n<p>【输出形式】</p>\n<p>纯整数，或者带两位小数的浮点数<br>【样例输入1】</p>\n<p>[1,2,3,4,5]<br>【样例输出1】</p>\n<p>3</p>\n<p>【样例输入2】</p>\n<p>[2,2,3,7,5,1]<br>【样例输出2】</p>\n<p>3.33<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">lst&#x3D;eval(input())\nsum&#x3D;0\nfor x in lst:\n    sum&#x3D;sum+x\nout&#x3D;sum&#x2F;len(lst)\nif out%1&#x3D;&#x3D;0:\n    print(&quot;%d&quot;%(out))\nelse:\n    print(&quot;%.2f&quot;%(out))\n</code></pre>\n\n<h2 id=\"4-8-计算整数列表的平均值\"><a href=\"#4-8-计算整数列表的平均值\" class=\"headerlink\" title=\"4.8 计算整数列表的平均值\"></a>4.8 计算整数列表的平均值</h2><p>【问题描述】</p>\n<p>输入一个整数列表，计算所有元素的平均值。结果保留两位小数。输入数据用逗号分隔<br>【输入形式】</p>\n<p>从键盘输入一个整数列表，包括方括号，元素逗号分隔<br>【输出形式】</p>\n<p>输出所有元素的平均值，结果保留两位小数</p>\n<p>【样例输入】</p>\n<p>[1,2,3,4,5]</p>\n<p>【样例输出】</p>\n<p>3.00<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">lst&#x3D;eval(input())\nsum&#x3D;0\nfor x in lst:\n    sum&#x3D;sum+x\nprint(&quot;%.2f&quot;%(sum&#x2F;len(lst)))\n</code></pre>\n\n<h2 id=\"4-9-交换列表中两个元素的值，并输出列表\"><a href=\"#4-9-交换列表中两个元素的值，并输出列表\" class=\"headerlink\" title=\"4.9 交换列表中两个元素的值，并输出列表\"></a>4.9 交换列表中两个元素的值，并输出列表</h2><p>【问题描述】</p>\n<p>输入一个由字符串构成的列表和两个整数n和m（n和m在输入列表的下标范围以内），交换其中两个元素的值，打印输出交换后的列表。<br>【输入形式】</p>\n<p>第一行输入由空格分隔的多个字符串</p>\n<p>第二行输入两个整数n和m，表示元素的位置，两个数字之间用空格区分。<br>【输出形式】</p>\n<p>直接使用print函数输出列表<br>【样例输入1】</p>\n<p>hello world python is great</p>\n<p>2 3<br>【样例输出1】</p>\n<p>[‘hello’, ‘world’, ‘is’, ‘python’, ‘great’]</p>\n<p>【样例输入2】</p>\n<p>hello world python is great</p>\n<p>-2 3<br>【样例输出2】</p>\n<p>[‘hello’, ‘world’, ‘python’, ‘is’, ‘great’]<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">lst&#x3D;input().split(&#39; &#39;)\nn,m&#x3D;input().split(&#39; &#39;)\nn&#x3D;int(n)\nm&#x3D;int(m)\nl&#x3D;&#39;1&#39;\nl&#x3D;lst[n]\nlst[n]&#x3D;lst[m]\nlst[m]&#x3D;l\nprint(lst)\n</code></pre>\n\n<h2 id=\"4-10-删除列表中的重复值\"><a href=\"#4-10-删除列表中的重复值\" class=\"headerlink\" title=\"4.10 删除列表中的重复值\"></a>4.10 删除列表中的重复值</h2><p>【问题描述】</p>\n<p>输入一个列表，删除其中的重复值，再输出。</p>\n<p>要求：假设列表中存在k个值为a的元素，删除前k-1个元素，保留最后一个。 不同元素在列表中的相对位置不应被改变。</p>\n<p>【输入形式】</p>\n<p>[元素1， 元素2, … , 元素n]</p>\n<p>【输出形式】</p>\n<p>[元素1，元素2, … , 元素k]</p>\n<p>【样例输入】</p>\n<p>[4,3,2,3,2,4,True]<br>【样例输出】</p>\n<p>[3, 2, 4, True]<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">lst&#x3D;eval(input())\nout&#x3D;[]\nfor x in range(0,len(lst)):\n    if (lst[x] in lst[x+1:])!&#x3D;True:\n        out.append(lst[x])\nprint(out)\n</code></pre>\n\n<h2 id=\"4-11-列表生成及循环左移\"><a href=\"#4-11-列表生成及循环左移\" class=\"headerlink\" title=\"4.11 列表生成及循环左移\"></a>4.11 列表生成及循环左移</h2><p>【问题描述】</p>\n<p>从键盘读入一个整数n, 并完成下述任务：</p>\n<p>1·使用快速列表生成语法生成列表 [1, 2, … ,n-1, n];</p>\n<p>2·使用for循环将列表循环左移一个位置；</p>\n<p>3·输出循环左移后的列表。</p>\n<p>【输入形式】</p>\n<p>n</p>\n<p>【输出形式】</p>\n<p>[2, 3, … , n, 1]</p>\n<p>【样例输入】</p>\n<p>5<br>【样例输出】</p>\n<p>[2, 3, 4, 5, 1]<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">n&#x3D;eval(input())\nlst&#x3D;[x for x in range(1,n+1)]\nlst.append(lst[0])\nfor x in range(0,len(lst)-1):\n    lst[x]&#x3D;lst[x+1]\nlst.pop()\nprint(lst)\n</code></pre>\n\n<h2 id=\"4-12-把列表里面的个位正整数组合成一个最大的整数\"><a href=\"#4-12-把列表里面的个位正整数组合成一个最大的整数\" class=\"headerlink\" title=\"4.12 把列表里面的个位正整数组合成一个最大的整数\"></a>4.12 把列表里面的个位正整数组合成一个最大的整数</h2><p>【问题描述】</p>\n<p>读入一个正整数列表，每个正整数都只有一位。把这些列表里面的数字，按位数组织成一个最大的整数，每个数字占据一位，不能重复使用。然后输出这个数字。例如列表[1,2,3,4] 可以组成1234, 或者4321等多个整数。输出最大整数。<br>【输入形式】</p>\n<p>一个包含一位自然数的列表<br>【输出形式】</p>\n<p>整数<br>【样例输入】</p>\n<p>[0,1,2,3,2]<br>【样例输出】</p>\n<p>32210<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">lst&#x3D;eval(input())\nlst&#x3D;sorted(lst,reverse&#x3D;True)\nif lst.count(0)&#x3D;&#x3D;len(lst):\n    print(&quot;0&quot;)\nelse:    \n    for x in lst:\n        print(x,end&#x3D;&#39;&#39;)\n\n</code></pre>\n\n<h2 id=\"4-13-在列表中找出只出现一次的元素，并排序输出\"><a href=\"#4-13-在列表中找出只出现一次的元素，并排序输出\" class=\"headerlink\" title=\"4.13 在列表中找出只出现一次的元素，并排序输出\"></a>4.13 在列表中找出只出现一次的元素，并排序输出</h2><p>【问题描述】</p>\n<p>输入一个自然数列表，找出只出现一次的元素，并升序输出。如果没有只出现一次的元素，则输出False。<br>【输入形式】</p>\n<p>输入包含自然数的列表，包括方括号，逗号分隔<br>【输出形式】</p>\n<p>排序后的数字，每个数字之间用英文逗号分隔。或者False。<br>【样例输入1】</p>\n<p>[1,2,3,5,2,3,4]<br>【样例输出1】</p>\n<p>1,4,5</p>\n<p>【样例输入2】</p>\n<p>[9,9,9,12,12]<br>【样例输出2】</p>\n<p>False<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">lst&#x3D;eval(input())\nout&#x3D;[]\nfor x in lst:\n    time&#x3D;0\n    for i in lst:\n        if x&#x3D;&#x3D;i:\n            time+&#x3D;1\n    if time&#x3D;&#x3D;1:\n        out.append(x)\nout&#x3D;sorted(out)\nif len(out)&#x3D;&#x3D;0:\n    print(&quot;False&quot;)\nelse:\n    for x in out:\n        if out.index(x)!&#x3D;len(out)-1:\n            print(x,end&#x3D;&#39;,&#39;)\n        else:\n            print(x)\n</code></pre>\n\n<h2 id=\"4-14-把列表中数值为0的元素移动到列表的尾端，其他元素相对顺序不变\"><a href=\"#4-14-把列表中数值为0的元素移动到列表的尾端，其他元素相对顺序不变\" class=\"headerlink\" title=\"4.14  把列表中数值为0的元素移动到列表的尾端，其他元素相对顺序不变\"></a>4.14  把列表中数值为0的元素移动到列表的尾端，其他元素相对顺序不变</h2><p>【问题描述】</p>\n<p>读入一个整数列表，把数值为0的元素移动到列表尾部，其他元素的相对顺序不变。输出调整后的列表。<br>【输入形式】</p>\n<p>按照列表的形式输入，包括方块号，逗号分隔。<br>【输出形式】</p>\n<p>直接使用print打印<br>【样例输入】</p>\n<p>[1,0,2,0,3,0,4]</p>\n<p>【样例输出】</p>\n<p>[1, 2, 3, 4, 0, 0, 0]<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">lst&#x3D;eval(input())\nfor x in lst:\n    if x&#x3D;&#x3D;0:\n        lst.remove(x)\n        lst.append(0)\nprint(lst)\n</code></pre>\n\n<h2 id=\"4-15-从一个列表中取出第n个元素，并重复m次，放到末尾，然后输出列表\"><a href=\"#4-15-从一个列表中取出第n个元素，并重复m次，放到末尾，然后输出列表\" class=\"headerlink\" title=\"4.15 从一个列表中取出第n个元素，并重复m次，放到末尾，然后输出列表\"></a>4.15 从一个列表中取出第n个元素，并重复m次，放到末尾，然后输出列表</h2><p>【问题描述】</p>\n<p>输入一个整数列表和整数n(n可以是负数）和正整数m，从该列表中选择第n个元素，把该元素重复m次，然后放到列表的尾端，最后输出列表。如果输入的n值不在列表下标范围之内，则输出”error”<br>【输入形式】</p>\n<p>输入时，第一行输入列表的元素，用英文逗号分隔。</p>\n<p>第二行输入两个数字n和m，用英文逗号分隔。</p>\n<p>【输出形式】</p>\n<p>直接使用print输出列表<br>【样例输入1】</p>\n<p>1,2,3,4,5</p>\n<p>2,3<br>【样例输出1】</p>\n<p>[1, 2, 3, 4, 5, 3, 3, 3]</p>\n<p>【样例输入2】</p>\n<p>1,2,3,4,5</p>\n<p>5,3<br>【样例输出2】</p>\n<p>error<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">lst&#x3D;eval(input())\nlst&#x3D;list(lst)\nn,m&#x3D;eval(input())\nif n&gt;&#x3D;len(lst):\n    print(&quot;error&quot;)\nelse:\n    a&#x3D;lst[n]\n    for x in range(0,m):\n        lst.append(a)\n    print(lst)\n</code></pre>\n\n","feature":false,"text":"Chapter4.列表4.1 删除列表中的最大元素和最小元素【问题描述】 读入一个整数列表，输出删除最大元素和最小元素后的列表。最大元素和最小元素可能有多个。【输入形式】 输入列表，包括方括号【输出形式】 直接用print输出列表【样例输入】 [1,2,3,4,5,6,1,7,7...","link":"","photos":[],"count_time":{"symbolsCount":"6.5k","symbolsTime":"6 mins."},"categories":[{"name":"Learning","slug":"Learning","count":3,"path":"api/categories/Learning.json"},{"name":"Coding","slug":"Learning/Coding","count":3,"path":"api/categories/Learning/Coding.json"},{"name":"Python","slug":"Learning/Coding/Python","count":3,"path":"api/categories/Learning/Coding/Python.json"}],"tags":[{"name":"weekly","slug":"weekly","count":4,"path":"api/tags/weekly.json"},{"name":"life","slug":"life","count":3,"path":"api/tags/life.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Chapter4-%E5%88%97%E8%A1%A8\"><span class=\"toc-text\">Chapter4.列表</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-1-%E5%88%A0%E9%99%A4%E5%88%97%E8%A1%A8%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E5%85%83%E7%B4%A0%E5%92%8C%E6%9C%80%E5%B0%8F%E5%85%83%E7%B4%A0\"><span class=\"toc-text\">4.1 删除列表中的最大元素和最小元素</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-2-%E6%8A%8A%E5%A7%93%E5%90%8D%E5%92%8C%E6%88%90%E7%BB%A9%E5%88%97%E8%A1%A8%E5%90%88%E5%B9%B6%E5%90%8E%E6%8C%89%E7%85%A7%E6%88%90%E7%BB%A9%E5%8D%87%E5%BA%8F%E6%8E%92%E5%88%97\"><span class=\"toc-text\">4.2 把姓名和成绩列表合并后按照成绩升序排列</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-3-%E6%8A%8A%E5%88%86%E5%B8%83%E5%9C%A8%E4%B8%A4%E4%B8%AA%E5%88%97%E8%A1%A8%E4%B8%AD%E7%9A%84%E5%A7%93%E5%90%8D%E5%92%8C%E6%88%90%E7%BB%A9%E9%85%8D%E5%AF%B9%E5%90%8E%E5%BD%A2%E6%88%90%E4%B8%80%E4%B8%AA%E5%88%97%E8%A1%A8\"><span class=\"toc-text\">4.3 把分布在两个列表中的姓名和成绩配对后形成一个列表</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-4-%E7%94%9F%E6%88%90%E6%8C%87%E5%AE%9A%E9%95%BF%E5%BA%A6%E7%9A%84%E7%AD%89%E5%B7%AE%E6%95%B0%E5%88%97\"><span class=\"toc-text\">4.4 生成指定长度的等差数列</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-5-%E5%88%A0%E9%99%A4%E5%88%97%E8%A1%A8%E4%B8%AD%E6%8C%87%E5%AE%9A%E4%BD%8D%E7%BD%AE%E7%9A%84%E5%85%83%E7%B4%A0\"><span class=\"toc-text\">4.5 删除列表中指定位置的元素</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-6-%E6%89%BE%E5%87%BA%E8%87%AA%E7%84%B6%E6%95%B0%E5%88%97%E8%A1%A8%E4%B8%AD%E7%9A%84%E7%B4%A0%E6%95%B0%EF%BC%8C%E5%B9%B6%E6%94%BE%E5%85%A5%E5%8F%A6%E5%A4%96%E4%B8%80%E4%B8%AA%E5%88%97%E8%A1%A8%EF%BC%8C%E7%84%B6%E5%90%8E%E8%BE%93%E5%87%BA%E6%89%BE%E5%87%BA%E7%9A%84%E7%B4%A0%E6%95%B0\"><span class=\"toc-text\">4.6 找出自然数列表中的素数，并放入另外一个列表，然后输出找出的素数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-7-%E8%AE%A1%E7%AE%97%E6%95%B4%E6%95%B0%E5%88%97%E8%A1%A8%E5%B9%B3%E5%9D%87%E5%80%BC-%E6%A0%B9%E6%8D%AE%E7%BB%93%E6%9E%9C%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E8%BE%93%E5%87%BA%E5%B0%8F%E6%95%B0%E9%83%A8%E5%88%86%EF%BC%89\"><span class=\"toc-text\">4.7 计算整数列表平均值(根据结果判断是否输出小数部分）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-8-%E8%AE%A1%E7%AE%97%E6%95%B4%E6%95%B0%E5%88%97%E8%A1%A8%E7%9A%84%E5%B9%B3%E5%9D%87%E5%80%BC\"><span class=\"toc-text\">4.8 计算整数列表的平均值</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-9-%E4%BA%A4%E6%8D%A2%E5%88%97%E8%A1%A8%E4%B8%AD%E4%B8%A4%E4%B8%AA%E5%85%83%E7%B4%A0%E7%9A%84%E5%80%BC%EF%BC%8C%E5%B9%B6%E8%BE%93%E5%87%BA%E5%88%97%E8%A1%A8\"><span class=\"toc-text\">4.9 交换列表中两个元素的值，并输出列表</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-10-%E5%88%A0%E9%99%A4%E5%88%97%E8%A1%A8%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E5%80%BC\"><span class=\"toc-text\">4.10 删除列表中的重复值</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-11-%E5%88%97%E8%A1%A8%E7%94%9F%E6%88%90%E5%8F%8A%E5%BE%AA%E7%8E%AF%E5%B7%A6%E7%A7%BB\"><span class=\"toc-text\">4.11 列表生成及循环左移</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-12-%E6%8A%8A%E5%88%97%E8%A1%A8%E9%87%8C%E9%9D%A2%E7%9A%84%E4%B8%AA%E4%BD%8D%E6%AD%A3%E6%95%B4%E6%95%B0%E7%BB%84%E5%90%88%E6%88%90%E4%B8%80%E4%B8%AA%E6%9C%80%E5%A4%A7%E7%9A%84%E6%95%B4%E6%95%B0\"><span class=\"toc-text\">4.12 把列表里面的个位正整数组合成一个最大的整数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-13-%E5%9C%A8%E5%88%97%E8%A1%A8%E4%B8%AD%E6%89%BE%E5%87%BA%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E5%85%83%E7%B4%A0%EF%BC%8C%E5%B9%B6%E6%8E%92%E5%BA%8F%E8%BE%93%E5%87%BA\"><span class=\"toc-text\">4.13 在列表中找出只出现一次的元素，并排序输出</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-14-%E6%8A%8A%E5%88%97%E8%A1%A8%E4%B8%AD%E6%95%B0%E5%80%BC%E4%B8%BA0%E7%9A%84%E5%85%83%E7%B4%A0%E7%A7%BB%E5%8A%A8%E5%88%B0%E5%88%97%E8%A1%A8%E7%9A%84%E5%B0%BE%E7%AB%AF%EF%BC%8C%E5%85%B6%E4%BB%96%E5%85%83%E7%B4%A0%E7%9B%B8%E5%AF%B9%E9%A1%BA%E5%BA%8F%E4%B8%8D%E5%8F%98\"><span class=\"toc-text\">4.14  把列表中数值为0的元素移动到列表的尾端，其他元素相对顺序不变</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-15-%E4%BB%8E%E4%B8%80%E4%B8%AA%E5%88%97%E8%A1%A8%E4%B8%AD%E5%8F%96%E5%87%BA%E7%AC%ACn%E4%B8%AA%E5%85%83%E7%B4%A0%EF%BC%8C%E5%B9%B6%E9%87%8D%E5%A4%8Dm%E6%AC%A1%EF%BC%8C%E6%94%BE%E5%88%B0%E6%9C%AB%E5%B0%BE%EF%BC%8C%E7%84%B6%E5%90%8E%E8%BE%93%E5%87%BA%E5%88%97%E8%A1%A8\"><span class=\"toc-text\">4.15 从一个列表中取出第n个元素，并重复m次，放到末尾，然后输出列表</span></a></li></ol></li></ol>","author":{"name":"Krodnel","slug":"blog-author","avatar":"https://s1.ax1x.com/2022/03/06/brFqER.png","link":"/","description":"I don't live in a dream <br /> The dream is my reality","socials":{"github":"https://github.com/godofborder","twitter":"https://twitter.com/godofborder","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-line.svg","link":"https://space.bilibili.com/34360575"},"QQ":{"icon":"/svg/QQ.svg","link":"http://wpa.qq.com/msgrd?v=3&uin=2632954297&site=qq&menu=yes"},"netease":{"icon":"/svg/netease.svg","link":"http://music.163.com/playlist?id=688977586&userid=337229589"},"steam":{"icon":"/svg/steam.svg","link":"https://steamcommunity.com/id/Krodnel/"}}}},"mapped":true,"prev_post":{"title":"PYTHON第6章基础习题","uid":"7f9325ccf0a7deb8deedae86991cd4ba","slug":"python-cp6-std","date":"2022-04-02T14:30:17.000Z","updated":"2023-03-10T14:58:08.288Z","comments":true,"path":"api/articles/python-cp6-std.json","keywords":null,"cover":"https://s1.ax1x.com/2022/03/14/bjepjg.jpg","text":"Chapter6. 循环6.A 程序片段练习6.A.1 列表元素循环右移一位【问题描述】 以下列表里所有元素循环右移一位。请补充函数体。 【输入形式】 输入列表的元素，以逗号隔开【输出形式】 循环右移一位后的列表 【样例输入】 1,2,3,4,5【样例输出】 [‘5’, ‘1’,...","link":"","photos":[],"count_time":{"symbolsCount":"17k","symbolsTime":"15 mins."},"categories":[{"name":"Learning","slug":"Learning","count":3,"path":"api/categories/Learning.json"},{"name":"Coding","slug":"Learning/Coding","count":3,"path":"api/categories/Learning/Coding.json"},{"name":"Python","slug":"Learning/Coding/Python","count":3,"path":"api/categories/Learning/Coding/Python.json"}],"tags":[{"name":"weekly","slug":"weekly","count":4,"path":"api/tags/weekly.json"},{"name":"life","slug":"life","count":3,"path":"api/tags/life.json"}],"author":{"name":"Krodnel","slug":"blog-author","avatar":"https://s1.ax1x.com/2022/03/06/brFqER.png","link":"/","description":"I don't live in a dream <br /> The dream is my reality","socials":{"github":"https://github.com/godofborder","twitter":"https://twitter.com/godofborder","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-line.svg","link":"https://space.bilibili.com/34360575"},"QQ":{"icon":"/svg/QQ.svg","link":"http://wpa.qq.com/msgrd?v=3&uin=2632954297&site=qq&menu=yes"},"netease":{"icon":"/svg/netease.svg","link":"http://music.163.com/playlist?id=688977586&userid=337229589"},"steam":{"icon":"/svg/steam.svg","link":"https://steamcommunity.com/id/Krodnel/"}}}},"feature":false},"next_post":{"title":"2022-March","uid":"331968bd518d7ee93cc059cb0862a51c","slug":"2022-3月序","date":"2022-03-01T14:58:23.000Z","updated":"2022-03-16T16:40:40.865Z","comments":true,"path":"api/articles/2022-3月序.json","keywords":null,"cover":"https://s1.ax1x.com/2022/03/06/brazDg.png","text":"三月已至！3.6 阳光明媚の三月 不知不觉间就已经三月了，天气转暖，太阳出现的次数也越来越多了，阳光明媚，正是向上生长的季节！ 3.14 三月祝词 带着二月的遗憾 在三月里奋力奔跑 我想 即使道路泥泞 也定会收获遍野的烂漫 3.15 哈哈~~~我是夏小姐的狗~~~-我忘不掉夏小姐...","link":"","photos":[],"count_time":{"symbolsCount":569,"symbolsTime":"1 mins."},"categories":[{"name":"Thoughts","slug":"Thoughts","count":9,"path":"api/categories/Thoughts.json"}],"tags":[{"name":"Life","slug":"Life","count":9,"path":"api/tags/Life.json"},{"name":"Monthly","slug":"Monthly","count":9,"path":"api/tags/Monthly.json"}],"author":{"name":"Krodnel","slug":"blog-author","avatar":"https://s1.ax1x.com/2022/03/06/brFqER.png","link":"/","description":"I don't live in a dream <br /> The dream is my reality","socials":{"github":"https://github.com/godofborder","twitter":"https://twitter.com/godofborder","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-line.svg","link":"https://space.bilibili.com/34360575"},"QQ":{"icon":"/svg/QQ.svg","link":"http://wpa.qq.com/msgrd?v=3&uin=2632954297&site=qq&menu=yes"},"netease":{"icon":"/svg/netease.svg","link":"http://music.163.com/playlist?id=688977586&userid=337229589"},"steam":{"icon":"/svg/steam.svg","link":"https://steamcommunity.com/id/Krodnel/"}}}}}}