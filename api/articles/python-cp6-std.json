{"title":"PYTHON第6章基础习题","uid":"7f9325ccf0a7deb8deedae86991cd4ba","slug":"python-cp6-std","date":"2022-04-02T14:30:17.000Z","updated":"2023-03-10T14:58:08.288Z","comments":true,"path":"api/articles/python-cp6-std.json","keywords":null,"cover":"https://s1.ax1x.com/2022/03/14/bjepjg.jpg","content":"<h1 id=\"Chapter6-循环\"><a href=\"#Chapter6-循环\" class=\"headerlink\" title=\"Chapter6. 循环\"></a>Chapter6. 循环</h1><h2 id=\"6-A-程序片段练习\"><a href=\"#6-A-程序片段练习\" class=\"headerlink\" title=\"6.A 程序片段练习\"></a>6.A 程序片段练习</h2><h3 id=\"6-A-1-列表元素循环右移一位\"><a href=\"#6-A-1-列表元素循环右移一位\" class=\"headerlink\" title=\"6.A.1 列表元素循环右移一位\"></a>6.A.1 列表元素循环右移一位</h3><p>【问题描述】</p>\n<p>以下列表里所有元素循环右移一位。请补充函数体。</p>\n<p>【输入形式】</p>\n<p>输入列表的元素，以逗号隔开<br>【输出形式】</p>\n<p>循环右移一位后的列表</p>\n<p>【样例输入】</p>\n<p>1,2,3,4,5<br>【样例输出】</p>\n<p>[‘5’, ‘1’, ‘2’, ‘3’, ‘4’]<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">def shift(lst):\n    global list1\n    lst.insert(0,lst.pop())\n    list1&#x3D;lst\n    return 0\n\nlist1 &#x3D; input().split(&quot;,&quot;) #输入格式 1,2,3,4,5\nshift(list1)\nprint(list1)</code></pre>\n<h3 id=\"6-A-2-本金与年利率\"><a href=\"#6-A-2-本金与年利率\" class=\"headerlink\" title=\"6.A.2 本金与年利率\"></a>6.A.2 本金与年利率</h3><p>【问题描述】李先生有本金N元（N&gt;&#x3D;10000）存入银行，年利率是千分之三，每过1年，将本金和利息相加作为新的本金。计算M年后，获得的本金是多少？</p>\n<p>【输入形式】输入一行，内容为以空格分隔的两个正整数N和M。</p>\n<p>【输出形式】输出李先生所获得的本金，结果保留小数点后四位。</p>\n<p>【样例输入】10000 5</p>\n<p>【样例输出】10150.9027<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">def main():\n    N,M &#x3D; map(int,input().split())\n    calculate_capital(N,M)\ndef calculate_capital(N,M):\n            i&#x3D;1\n            while(i&lt;&#x3D;M):\n                N&#x3D;N*1.003\n                i+&#x3D;1\n            print(&quot;%.4f&quot;%(N))\n            return 0\nmain()</code></pre>\n<h3 id=\"6-A-3-卖西瓜\"><a href=\"#6-A-3-卖西瓜\" class=\"headerlink\" title=\"6.A.3 卖西瓜\"></a>6.A.3 卖西瓜</h3><p>【问题描述】农夫有N（N大于0）个西瓜，第一天卖掉总数的一半后又多卖出两个，以后每天卖剩下的一半多两个，问几天以后能卖完？</p>\n<p>【输入形式】输入一个正整数N，表示农夫拥有的西瓜数。</p>\n<p>【输出形式】输出一个整数，表示农夫卖完全部瓜所需要的天数。</p>\n<p>【样例输入】10</p>\n<p>【样例输出】2</p>\n<p>【样例说明】农夫有10个瓜，第一天卖出（5+2）个，剩余3个；第二天卖出（1+2）个，剩余0个。注：农夫只卖整瓜！<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">def main():\n    total_count &#x3D; int(input())\n    calculate_days(total_count)\ndef calculate_days(a):\n            i&#x3D;0\n            while(a&gt;0):\n                a-&#x3D;a&#x2F;&#x2F;2+2\n                i+&#x3D;1\n            print(&quot;%d&quot;%(i))\n            return 0\nmain()</code></pre>\n<h3 id=\"6-A-4-多项求和\"><a href=\"#6-A-4-多项求和\" class=\"headerlink\" title=\"6.A.4 多项求和\"></a>6.A.4 多项求和</h3><p>【问题描述】求s&#x3D;a+aa+aaa+aaaa+aaaaa+aa…a的值，其中a是一个数字，表示s由几个数相加。例如当a&#x3D;3时，s等于三个数相加的和，即s&#x3D;3+33+333&#x3D;369。</p>\n<p>【输入形式】从键盘输入一个正整数a。</p>\n<p>【输出形式】输出此时s的值。</p>\n<p>【样例输入】3</p>\n<p>【样例输出】369<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">def main():\n    a&#x3D;int(input())\n    calculate_sum(a)\ndef calculate_sum(a):\n    floor&#x3D;1\n    sum&#x3D;0\n    i&#x3D;1\n    multiple&#x3D;a&#x2F;&#x2F;10+1\n    while(i&lt;&#x3D;a):\n        sum+&#x3D;a*floor\n        floor&#x3D;floor*(10**multiple)+1\n        i+&#x3D;1\n    print(&quot;%d&quot;%(sum))\n    return 0\nmain()</code></pre>\n<h3 id=\"6-A-5-计算e\"><a href=\"#6-A-5-计算e\" class=\"headerlink\" title=\"6.A.5 计算e\"></a>6.A.5 计算e</h3><p>【问题描述】编写程序使用下列公式计算e。e&#x3D;1+1&#x2F;1!+1&#x2F;2!+1&#x2F;3!+…+1&#x2F;n!</p>\n<p>【输入形式】输入一个正整数n。</p>\n<p>【输出形式】输出对应的e的值，结果保留小数点后六位有效数字</p>\n<p>【样例输入】10</p>\n<p>【样例输出】2.718282<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">def main():\n    num &#x3D; eval(input())\n    calculate_e(num)\ndef calculate_e(num):\n    i&#x3D;1\n    sum&#x3D;1\n    while(i&lt;&#x3D;num):\n        jiecheng&#x3D;1\n        for x in range(1,i+1):\n            jiecheng*&#x3D;x\n        sum+&#x3D;1&#x2F;jiecheng\n        i+&#x3D;1\n    print(&quot;%.6f&quot;%(sum))\n    return 0\nmain()</code></pre>\n<h3 id=\"6-A-6-偶数和\"><a href=\"#6-A-6-偶数和\" class=\"headerlink\" title=\"6.A.6 偶数和\"></a>6.A.6 偶数和</h3><p>【问题描述】编程实现：从 0 开始到 n(n&gt;0，包括n) 以内的所有偶数之和<br>【输入形式】输入一个正整数n<br>【输出形式】结果以整数形式输出<br>【样例输入】10<br>【样例输出】30<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">n&#x3D;eval(input())\nh1&#x3D;0\nfor x in range(1,n+1):\n      if x%2&#x3D;&#x3D;0:\n            h1+&#x3D;x\nprint(h1)</code></pre>\n<h3 id=\"6-A-7-整数的各位数字之和\"><a href=\"#6-A-7-整数的各位数字之和\" class=\"headerlink\" title=\"6.A.7 整数的各位数字之和\"></a>6.A.7 整数的各位数字之和</h3><p>【问题描述】输入一个整数，求该整数的各位数之和<br>【输入形式】<br>【输出形式】<br>【样例输入】123<br>【样例输出】6<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">n&#x3D;eval(input())\nsum1&#x3D;0\nwhile (n&gt;0):\n  sum1+&#x3D;n%10\n  n&#x3D;n&#x2F;&#x2F;10\nprint(sum1)</code></pre>\n<h3 id=\"6-A-8-是否包含数字5\"><a href=\"#6-A-8-是否包含数字5\" class=\"headerlink\" title=\"6.A.8 是否包含数字5\"></a>6.A.8 是否包含数字5</h3><p>【问题描述】输入一个整数，求该整数上的各位数是否包含数字5，若有,则按从低到高的顺序输出第几位,若没有则输出-1</p>\n<p>【输入形式】<br>【输出形式】每一行代表包含数字5的位数<br>【样例输入】</p>\n<p>1223<br>【样例输出】</p>\n<p>-1</p>\n<p>【样例输入】</p>\n<p>125<br>【样例输出】</p>\n<p>1</p>\n<p>【样例输入】</p>\n<p>525<br>【样例输出】</p>\n<p>1</p>\n<p>3<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">n&#x3D;int(input())\nj&#x3D;1\nb&#x3D;-1\nflag&#x3D;False\nwhile n&gt;0:\n  if n%10&#x3D;&#x3D;5:\n    print(j)\n    flag&#x3D;True\n  n&#x3D;n&#x2F;&#x2F;10\n  j+&#x3D;1\nif flag&#x3D;&#x3D;False:\n  print(b)</code></pre>\n<h3 id=\"6-A-9-二月的天数\"><a href=\"#6-A-9-二月的天数\" class=\"headerlink\" title=\"6.A.9 二月的天数\"></a>6.A.9 二月的天数</h3><p>【问题描述】</p>\n<p>二月通常有28天，但如果是闰年，二月就有29天。 请编写一个程序，根据用户输入的年份计算当年2月的天数并输出，其中，判断闰年请用自定义函数实现。 提示：能被400整除的是闰年，能被4整除但是不能被100整除的也是闰年</p>\n<p>【输入形式】</p>\n<p>整数（代表年份）</p>\n<p>【输出形式】</p>\n<p>In 【年份】 February has [29 or 28] days.</p>\n<p>【样例输入】</p>\n<p>2021</p>\n<p>【样例输出】</p>\n<p>In 2021 February has 28 days.<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">def leapyear(x):\n       if x%4&#x3D;&#x3D;0:\n           if x%100!&#x3D;0:\n               return True\n           elif x%100&#x3D;&#x3D;0:\n               return True\n           else:\n               return False\nyear&#x3D;int(input())\nif leapyear(year):\n    print(&quot;In %d February has 29 days.&quot;%year)\nelse:\n    print(&quot;In %d February has 28 days.&quot;%year)\n</code></pre>\n<h3 id=\"6-A-10-计算个人所得税和工资\"><a href=\"#6-A-10-计算个人所得税和工资\" class=\"headerlink\" title=\"6.A.10 计算个人所得税和工资\"></a>6.A.10 计算个人所得税和工资</h3><p>【问题描述】</p>\n<p>应纳个人所得税税额&#x3D; 应纳税所得额× 适用税率- 速算扣除数 </p>\n<p>扣除标准5000元&#x2F;月（2019年1月1日起正式执行）（工资、薪金所得适用） </p>\n<p>个税免征额5000元 　（工资薪金所得适用） </p>\n<p>级数全年应纳税所得额                         税率(%)速算扣除数 </p>\n<p>1不超过36,000元                  3        0 </p>\n<p>2超过36,000元至144,000元的部分       10     2,520 </p>\n<p>3超过144,000元至300,000元的部分      20    16,920 </p>\n<p>4超过300,000元至420,000元的部分      25    31,920 </p>\n<p>5超过420,000元至660,000元的部分      30    52,920 </p>\n<p>6超过660,000元至960,000元的部分      35    85,920 </p>\n<p>7超过960,000元的部分                45   181,920 </p>\n<p>输入一个人年薪，根据公式，计算出个人所得税，以及税后年薪</p>\n<p>【输入形式】</p>\n<p>年薪<br>【输出形式】</p>\n<p>个人所得税</p>\n<p>税后年薪</p>\n<p>【样例输入】<br>180000</p>\n<p>【样例输出】</p>\n<p>9480.00</p>\n<p>170520.00<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">salary &#x3D; float(input())\ntax &#x3D; 0.0\nsalary -&#x3D; 5000*12\nif salary &lt;&#x3D; 0:\n    tax &#x3D; 0.0\nelif salary &lt;&#x3D; 36000:\n    tax &#x3D; salary * 0.03\nelif salary &lt;&#x3D; 144000:\n    tax &#x3D; salary * 0.1 - 2520\nelif salary &lt;&#x3D; 300000:\n    tax &#x3D; salary * 0.2 - 16920\nelif salary &lt;&#x3D; 420000:\n    tax &#x3D; salary * 0.25 - 31920\nelif salary &lt;&#x3D; 660000:\n    tax &#x3D; salary * 0.3 - 52920\nelif salary &lt;&#x3D; 960000:\n    tax &#x3D; salary * 0.35 - 85920\nelse:\n    tax &#x3D; salary * 0.45 - 181920\nsalary&#x3D;salary+5000*12-tax\nprint(&quot;%.2f&quot;%tax)\nprint(&quot;%.2f&quot;%salary)</code></pre>\n\n<hr>\n<h2 id=\"6-B-完整编程练习\"><a href=\"#6-B-完整编程练习\" class=\"headerlink\" title=\"6.B 完整编程练习\"></a>6.B 完整编程练习</h2><h3 id=\"6-B-1-加密数据\"><a href=\"#6-B-1-加密数据\" class=\"headerlink\" title=\"6.B.1 加密数据\"></a>6.B.1 加密数据</h3><p>【问题描述】加密数据。从键盘输入一段数字， 加密规则如下：对于每一个位置上的数字进行如下处理： 每位数字加上 5， 然后除以 10 得到的余数代替该数字， 再将第一位和最后一位交换，第二位与倒数第二位交换， 依此类推， 最后输出加密后的数字密码 。<br>【输入形式】输入一行数字<br>【输出形式】输出加密后的结果<br>【样例输入】</p>\n<p>123<br>【样例输出】</p>\n<p>876</p>\n<p>【样例输入】</p>\n<p>321<br>【样例输出】</p>\n<p>678<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">lst&#x3D;list(input())\nfor x in range(len(lst)):\n    lst[x]&#x3D;int(lst[x])\ni&#x3D;0\nwhile(i&lt;len(lst)):\n    lst[i]&#x3D;(lst[i]+5)%10\n    i+&#x3D;1\nj&#x3D;0\nwhile(j&lt;len(lst)&#x2F;&#x2F;2):\n    lst[j],lst[len(lst)-j-1]&#x3D;lst[len(lst)-j-1],lst[j]\n    j+&#x3D;1\nfor x in lst:\n    print(x,end&#x3D;&quot;&quot;)</code></pre>\n<h3 id=\"6-B-2-高度反弹\"><a href=\"#6-B-2-高度反弹\" class=\"headerlink\" title=\"6.B.2 高度反弹\"></a>6.B.2 高度反弹</h3><p>【问题描述】一球从 h 米高度自由落下， 每次落地后反跳回原高度的 0.5倍； 再落下， 求它在第 N 次落地时， 共经过多少米？<br>【输入形式】第一行输入高度，第二行输入N</p>\n<p>【输出形式】输出两位数的浮点数<br>【样例输入】</p>\n<p>10</p>\n<p>6<br>【样例输出】</p>\n<p>29.38<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">h&#x3D;eval(input())\nN&#x3D;eval(input())\ni&#x3D;2\nsum&#x3D;h\nwhile(i&lt;&#x3D;N):\n    h*&#x3D;0.5\n    sum+&#x3D;2*h\n    i+&#x3D;1\nprint(&quot;%.2f&quot;%(sum))</code></pre>\n<h3 id=\"6-B-3-找学生\"><a href=\"#6-B-3-找学生\" class=\"headerlink\" title=\"6.B.3 找学生\"></a>6.B.3 找学生</h3><p>【问题描述】折半查找。 1 个列表里存储了 20 个子列表， 各子列表内存储了学生的学号及姓名两个元素， 两个元素都是字符串类型。 现已知该 20 个学生子列表已按学号递增序排好序。请设计一个程序， 使用折半查找算法通过最少次数的比较找到指定学号的学生， 如果有， 输出这个学生的学号和姓名， 如果没有， 输出报告未找到该学生。 列表中存储数据为stu_list&#x3D;</p>\n<p>[[‘201801’,’zhangyi’],[‘201802’,’zhanger’],[‘201803’,’zhangsan’],[‘201804’,’zhangsi’],</p>\n<p>[‘201805’,’wangyi’],[‘201806’,’wanger’],[‘201807’,’wangsan’],[‘201808’,’wangsi’],</p>\n<p>[‘201809’,’liyi’],[‘201810’,’lier’],[‘201811’,’lisan’],[‘201812’,’lisi’],</p>\n<p>[‘201813’,’zhaoyi’],[‘201814’,’zhaoer’],[‘201815’,’zhaosan’],[‘201816’,’zhaosi’],</p>\n<p>[‘201817’,’zhouyi’],[‘201818’,’zhouer’],[‘201819’,’zhousan’],[‘201820’,’zhousi’]]</p>\n<p>【输入形式】输入要查找的学生学号<br>【输出形式】输出学号和姓名<br>【样例输入】201800<br>【样例输出】None</p>\n<p>【样例输入】201803<br>【样例输出】201803zhangsan<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">stu_lst&#x3D;[[&#39;201801&#39;,&#39;zhangyi&#39;],[&#39;201802&#39;,&#39;zhanger&#39;],[&#39;201803&#39;,&#39;zhangsan&#39;],[&#39;201804&#39;,&#39;zhangsi&#39;],[&#39;201805&#39;,&#39;wangyi&#39;],[&#39;201806&#39;,&#39;wanger&#39;],[&#39;201807&#39;,&#39;wangsan&#39;],[&#39;201808&#39;,&#39;wangsi&#39;],[&#39;201809&#39;,&#39;liyi&#39;],[&#39;201810&#39;,&#39;lier&#39;],[&#39;201811&#39;,&#39;lisan&#39;],[&#39;201812&#39;,&#39;lisi&#39;],[&#39;201813&#39;,&#39;zhaoyi&#39;],[&#39;201814&#39;,&#39;zhaoer&#39;],[&#39;201815&#39;,&#39;zhaosan&#39;],[&#39;201816&#39;,&#39;zhaosi&#39;],[&#39;201817&#39;,&#39;zhouyi&#39;],[&#39;201818&#39;,&#39;zhouer&#39;],[&#39;201819&#39;,&#39;zhousan&#39;],[&#39;201820&#39;,&#39;zhousi&#39;]]\nnumber&#x3D;input()\nfor x in stu_lst:\n    if number in x:\n        for j in x:\n            print(j,end&#x3D;&quot;&quot;)\n        break\nelse:\n    print(&quot;None&quot;)</code></pre>\n<h3 id=\"6-B-4-数列求和\"><a href=\"#6-B-4-数列求和\" class=\"headerlink\" title=\"6.B.4 数列求和\"></a>6.B.4 数列求和</h3><p>【问题描述】有一个分数数列：2&#x2F;1,3&#x2F;2,5&#x2F;3,8&#x2F;5,13&#x2F;8,21&#x2F;13,…,从键盘输入一个正整数n，求出这个数列的前n项之和。</p>\n<p>【输入形式】输入一个正整数n。</p>\n<p>【输出形式】输出该数列的前n项之和，并保留四位小数。</p>\n<p>【样例输入】3</p>\n<p>【样例输出】5.1667<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">n&#x3D;eval(input())\nup&#x3D;2\ndown&#x3D;1\nc&#x3D;0\nsum&#x3D;0\nfor x in range(n):\n    sum+&#x3D;(up&#x2F;down)\n    c&#x3D;up\n    up+&#x3D;down\n    down&#x3D;c\nprint(&quot;%.4f&quot;%(sum))</code></pre>\n<h3 id=\"6-B-5-累积求和\"><a href=\"#6-B-5-累积求和\" class=\"headerlink\" title=\"6.B.5 累积求和\"></a>6.B.5 累积求和</h3><p>【问题描述】从键盘不断地输入整数，当输入“#”时程序退出，然后打印出所输入整数的个数和总和。</p>\n<p>【输入形式】输入多行，每行从键盘输入一个数，直到输入#为止，则输入停止。</p>\n<p>【输出形式】输出一行，内容为以空格分隔的两个数，分别表示输入整数的个数n和这些整数的总和s。</p>\n<p>【样例输入】1</p>\n<p>2</p>\n<p>#</p>\n<p>【样例输出】2 3<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">a&#x3D;True\ncount&#x3D;0\nsum&#x3D;0\nwhile(a):\n    n&#x3D;input()\n    if n!&#x3D;&quot;#&quot;:\n        count+&#x3D;1\n        sum+&#x3D;int(n)\n    else:\n        print(count,sum)\n        break</code></pre>\n<h3 id=\"6-B-6-回文素数\"><a href=\"#6-B-6-回文素数\" class=\"headerlink\" title=\"6.B.6 回文素数\"></a>6.B.6 回文素数</h3><p>【问题描述】编写程序，从键盘输入一个数n，输出n以内的所有的回文素数。若n输入不合法（为小数或者负数），则输出提示：“illegal input”。</p>\n<p>回文素数是指一个数既是素数又是回文数。一个大于1的自然数，除了1和它自身外，不能被其他自然数整除的数称之为素数。例如131既是素数又是回文数。</p>\n<p>【输入形式】输入一个整数n（n&gt;1）。</p>\n<p>【输出形式】以空格分隔输出n以内的所有的回文素数。若n输入不合法（为小数或负数），则输出提示“illegal input”</p>\n<p>【样例输入1】200</p>\n<p>【样例输出1】2 3 5 7 11 101 131 151 181 191</p>\n<p>【样例输入2】-4</p>\n<p>【样例输出2】illegal input<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">n&#x3D;eval(input())\nout&#x3D;[]\nif n%1!&#x3D;0 or n&lt;&#x3D;0:\n    print(&quot;illegal input&quot;)\nelse:\n    for x in range(2,n+1):\n        time&#x3D;0\n        for j in range(2,x+1):\n            if x%j&#x3D;&#x3D;0:\n                time+&#x3D;1\n        if time&#x3D;&#x3D;1:\n            l&#x3D;str(x)\n            i&#x3D;0\n            floor&#x3D;0\n            while(i&lt;len(l)&#x2F;&#x2F;2):\n                if l[i]&#x3D;&#x3D;l[-1-i]:\n                    floor+&#x3D;1\n                i+&#x3D;1\n            if floor&#x3D;&#x3D;(len(l)&#x2F;&#x2F;2):\n                out.append(x)\nfor x in out:\n    print(x,end&#x3D;&quot; &quot;)</code></pre>\n<h3 id=\"6-B-7-组合数字\"><a href=\"#6-B-7-组合数字\" class=\"headerlink\" title=\"6.B.7 组合数字\"></a>6.B.7 组合数字</h3><p>【问题描述】从键盘输入两个整数n和m（要求n&lt;m)，编程求出由n到m(不包含m)中的整数组合而成的所有不含重复数字的三位数。若n和m的输入不合法或者没有符合条件的三位数则提示输出“illegal input”。</p>\n<p>【输入形式】输入一行，内容为两个以空格分隔的整数，分别表示n和m。</p>\n<p>【输出形式】以空格分隔输出所有符合条件的三位数。</p>\n<p>【样例输入】1 4</p>\n<p>【样例输出】123 132 213 231 312 321</p>\n<p>【样例输入】2 4</p>\n<p>【样例输出】illegal input</p>\n<p>【样例输入】0 3</p>\n<p>【样例输出】102 120 201 210<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">a,b&#x3D;map(int,input().split(&quot; &quot;))\nout&#x3D;[]\nif b-a&lt;3:\n    print(&quot;illegal input&quot;)\nelse:\n    for x in range(a,b):\n        for y in range(a,b):\n            for z in range(a,b):\n                num&#x3D;x*100+y*10+z\n                if x!&#x3D;y and x!&#x3D;z and y!&#x3D;z and num&gt;100:\n                    out.append(num)\n    if len(out)&#x3D;&#x3D;0 or out[0]&gt;1000:\n        print(&quot;illegal input&quot;)\n    else:\n        for x in out:\n            print(x,end&#x3D;&quot; &quot;)</code></pre>\n<h3 id=\"6-B-8-颜色混合器\"><a href=\"#6-B-8-颜色混合器\" class=\"headerlink\" title=\"6.B.8 颜色混合器\"></a>6.B.8 颜色混合器</h3><p>【问题描述】</p>\n<p>红色(red)、蓝色(blue)和黄色(yellow)被称为原色(primary color)。 当两种原色混合时，将得到次生色(secondary color)。</p>\n<p>规则如下： </p>\n<p>当红色与蓝色混合时，将得到紫色(purple)。 </p>\n<p>当红色与黄色混合时，将得到橙色(orange)。 </p>\n<p>当蓝色与黄色混合时，将得到绿色(green)。 </p>\n<p>编写一个程序，根据用户输入的欲混合的两种原色，输出混合得到的次生色的名称。 如果用户输入的不是三原色的名称，或者输入的两个颜色相同，则输出“error”</p>\n<p>【输入形式】</p>\n<p>原色1</p>\n<p>原色2<br>【输出形式】</p>\n<p>次生色 or error<br>【样例输入1】</p>\n<p>red</p>\n<p>blue</p>\n<p>【样例输出1】</p>\n<p>purple</p>\n<p>【样例输入2】</p>\n<p>red</p>\n<p>red</p>\n<p>【样例输出2】</p>\n<p>error<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">a&#x3D;input()\nb&#x3D;input()\ncolor&#x3D;[&quot;red&quot;,&quot;blue&quot;,&quot;yellow&quot;]\nrule&#x3D;[[&quot;red&quot;,&quot;yellow&quot;,&quot;orange&quot;],[&quot;red&quot;,&quot;blue&quot;,&quot;purple&quot;],[&quot;blue&quot;,&quot;yellow&quot;,&quot;green&quot;]]\nif a&#x3D;&#x3D;b or a not in color or b not in color:\n    print(&quot;error&quot;)\nelse:\n    for x in rule:\n        if a in x and b in x:\n            print(x[-1])</code></pre>\n<h3 id=\"6-B-9-轮盘赌的颜色\"><a href=\"#6-B-9-轮盘赌的颜色\" class=\"headerlink\" title=\"6.B.9 轮盘赌的颜色\"></a>6.B.9 轮盘赌的颜色</h3><p>【问题描述】</p>\n<p>在一个赌博用的转盘上，口袋的编号是从0到36，口袋的颜色如下： </p>\n<p>1.从1号袋到10号袋，奇数的口袋是红色，偶数的口袋是黑色。</p>\n<p>2.从11号袋到18号袋，奇数的口袋是黑色，偶数的口袋是红色。</p>\n<p>3.从19号袋到28号袋，奇数的口袋是红色，偶数的口袋是黑色。 </p>\n<p>4.从29号袋到36号袋，奇数的口袋是黑色，偶数的口袋是红色。</p>\n<p>5.0号口袋是绿色</p>\n<p>请编写一个程序，根据用户输入的口袋编号，输出口袋的颜色。 如果用户输入的数字不在0~36这个范围内，则输出“error”。</p>\n<p>【输入形式】<br>整数</p>\n<p>【输出形式】</p>\n<p>green or red or black or error<br>【样例输入1】</p>\n<p>0<br>【样例输出1】</p>\n<p>green</p>\n<p>【样例输入2】</p>\n<p>11<br>【样例输出2】</p>\n<p>black<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">a&#x3D;eval(input())\nrule&#x3D;[&quot;black&quot;,&quot;red&quot;,&quot;green&quot;]\nif a&lt;0 or a&gt;36:\n    print(&quot;error&quot;)\nelse:\n    if a in range(1,11) or a in range(19,29):\n        if a%2&#x3D;&#x3D;0:\n            print(rule[0])\n        else:\n            print(rule[1])\n    elif a in range(11,19) or a in range(29,37):\n        if a%2&#x3D;&#x3D;0:\n            print(rule[1])\n        else:\n            print(rule[0])\n    else:\n        print(rule[2])</code></pre>\n<h3 id=\"6-B-10-月份对应的季节\"><a href=\"#6-B-10-月份对应的季节\" class=\"headerlink\" title=\"6.B.10 月份对应的季节\"></a>6.B.10 月份对应的季节</h3><p>【问题描述】</p>\n<p>根据用户输入的月份，打印该月份所属的季节，如果输入的数据不在1~12范围内，输出“error” </p>\n<p>提示：3，4，5 spring ；6，7，8 summer ；9，10，11 autumn ；12，1，2 winter</p>\n<p>【输入形式】</p>\n<p>月份（整数）<br>【输出形式】</p>\n<p>spring or summer or autumn or winter or error</p>\n<p>【样例输入】<br>3</p>\n<p>【样例输出】<br>spring<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">a&#x3D;eval(input())\nrule&#x3D;[[3,4,5,&quot;spring&quot;],[6,7,8,&quot;summer&quot;],[9,10,11,&quot;autumn&quot;],[12,1,2,&quot;winter&quot;]]\nif a not in range(1,13):\n    print(&quot;error&quot;)\nelse:\n    for x in rule:\n        if a in x:\n            print(x[-1])</code></pre>\n<h3 id=\"6-B-11-字符统计\"><a href=\"#6-B-11-字符统计\" class=\"headerlink\" title=\"6.B.11 字符统计\"></a>6.B.11 字符统计</h3><p>【问题描述】</p>\n<p>输入一行字符（不能输入中文字符），分别统计出该字符串英文字符、空格、数字和其他字符的个数</p>\n<p>【输入形式】</p>\n<p>字符串</p>\n<p>【输出形式】</p>\n<p>英文字符个数 空格个数 数字字符个数 其他字符个数</p>\n<p>【样例输入】</p>\n<p>abcd 1 2 3 4!@#$$%^</p>\n<p>【样例输出】</p>\n<p>4 4 4 7</p>\n<p>【样例说明】</p>\n<p>输出数字之间用空格隔开<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">a&#x3D;input()\neng&#x3D;0\nspace&#x3D;0\nnum&#x3D;0\nother&#x3D;0\nfor x in a:\n    if x.isalpha()&#x3D;&#x3D;True:\n        eng+&#x3D;1\n    elif x.isdigit()&#x3D;&#x3D;True:\n        num+&#x3D;1\n    elif x&#x3D;&#x3D;&quot; &quot;:\n        space+&#x3D;1\n    else:\n        other+&#x3D;1\nprint(eng,space,num,other)</code></pre>\n<h3 id=\"6-B-12-分段函数求值\"><a href=\"#6-B-12-分段函数求值\" class=\"headerlink\" title=\"6.B.12 分段函数求值\"></a>6.B.12 分段函数求值</h3><p>【问题描述】</p>\n<p>编写一个程序，用户输入一个值x，计算分段函数f(x)的值并输出结果，函数f(x)请用自定义函数实现。</p>\n<p>其中，</p>\n<p><a href=\"https://imgtu.com/i/qTS1qf\"><img src=\"https://s1.ax1x.com/2022/04/02/qTS1qf.png\" alt=\"分段函数.png\"></a></p>\n<p>【输入形式】</p>\n<p>x<br>【输出形式】</p>\n<p>小数点后2位<br>【样例输入】</p>\n<p>21.5<br>【样例输出】</p>\n<p>2.12<br>【样例说明】</p>\n<p>x的值可以是整数也可以是小数，甚至可以是负数<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">def cal(x):\n    if x&lt;20:\n        return 6*x**2+1\n    elif x&gt;&#x3D;20 and x&lt;40:\n        return (3*x-60)**0.5\n    elif x&gt;&#x3D;40:\n        return 100&#x2F;(x+1)\nn&#x3D;eval(input())\nprint(&quot;%.2f&quot;%(cal(n)))\n</code></pre>\n<h3 id=\"6-B-13-美元人民币转换\"><a href=\"#6-B-13-美元人民币转换\" class=\"headerlink\" title=\"6.B.13 美元人民币转换\"></a>6.B.13 美元人民币转换</h3><p>【问题描述】</p>\n<p>以下是一段温度转换程序，可以实现华氏温度和摄氏温度的转换，请自行阅读程序，在理解程序的基础上，仿照此程序，写一个人民币和美元之间的货币转换程序。</p>\n<p>该程序实现以下功能：</p>\n<p>示例：输入212F      输出100.00C</p>\n<p>输入100c      输出212.00F</p>\n<p>输入不符合格式要求，输出“Error”     </p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">TempStr &#x3D; input()\n\nif TempStr[-1] in [&#39;F&#39;,&#39;f&#39;]:\n\n    C &#x3D; (eval(TempStr[0:-1]) - 32)&#x2F;1.8\n\n    print(&quot;%.2fC&quot;%(C))\n\nelif TempStr[-1] in [&#39;C&#39;,&#39;c&#39;]:\n\n    F &#x3D; 1.8*eval(TempStr[0:-1]) + 32\n\n    print(&quot;%.2fF&quot;%(F))\n\nelse:\n\n    print(&quot;Error&quot;)</code></pre>\n\n\n<p>人民币和美元是世界上通用的两种货币之一，写一个程序进行货币间币值转换，其中：人民币和美元间汇率固定为：1美元 &#x3D; 6.78人民币。</p>\n<p>程序可以接受人民币或美元输入，转换为美元或人民币输出。人民币采用&amp;符号或RMB表示，美元采用$或USD表示，符号和数值之间没有空格。</p>\n<p>注意：人民币和美元间符号在转换中要对等，&amp;和$相互对应，RMB和USD相互对应。</p>\n<p>【输入形式】</p>\n<p>美元或人民币</p>\n<p>【输出形式】</p>\n<p>转换后的人民币或美元，保留两位小数</p>\n<p>输入不符合格式要求，输出“Error”</p>\n<p>【样例输入1】</p>\n<p>$128.00</p>\n<p>【样例输出1】</p>\n<p>&amp;867.84</p>\n<p>【样例输入2】</p>\n<p>&amp;12.9</p>\n<p>【样例输出2】</p>\n<p>$1.90</p>\n<p>【样例输入3】</p>\n<p>RMB123</p>\n<p>【样例输出3】</p>\n<p>USD18.14</p>\n<p>【样例输入4】</p>\n<p>USD18.14</p>\n<p>【样例输出4】</p>\n<p>RMB122.99<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">balance&#x3D;input()\nif balance[0]&#x3D;&#x3D;&quot;$&quot;:\n    c&#x3D;(eval(balance[1:len(balance)])*6.78)\n    print(&quot;&amp;%.2f&quot;%(c))\nelif balance[0]&#x3D;&#x3D;&quot;&amp;&quot;:\n    c&#x3D;(eval(balance[1:len(balance)])&#x2F;6.78)\n    print(&quot;$%.2f&quot;%(c))\nelif balance[0:3]&#x3D;&#x3D;&quot;USD&quot;:\n    c&#x3D;(eval(balance[3:len(balance)])*6.78)\n    print(&quot;RMB%.2f&quot;%(c))\nelif balance[0:3]&#x3D;&#x3D;&quot;RMB&quot;:\n    c&#x3D;(eval(balance[3:len(balance)])&#x2F;6.78)\n    print(&quot;USD%.2f&quot;%(c))\nelse:\n    print(&quot;Error&quot;)</code></pre>\n<h3 id=\"6-B-14-判断正方形\"><a href=\"#6-B-14-判断正方形\" class=\"headerlink\" title=\"6.B.14 判断正方形\"></a>6.B.14 判断正方形</h3><p>【问题描述】</p>\n<p>输入一个方形的长度和宽度，编写程序判断该方形是否为正方形（长和宽都应大于0）<br>【输入形式】</p>\n<p>长度</p>\n<p>宽度<br>【输出形式】</p>\n<p>（1）如果长度等于宽度，输出：It’s a square</p>\n<p>（2）如果长度不等于宽度，输出：It’s a rectangle</p>\n<p>（3）如果长或宽有小于0的，输出：illegal data</p>\n<p>【样例输入1】</p>\n<p>10</p>\n<p>10<br>【样例输出1】</p>\n<p>It’s a square</p>\n<p>【样例输入2】</p>\n<p>-2</p>\n<p>10<br>【样例输出2】</p>\n<p>illegal data<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">a&#x3D;eval(input())\nb&#x3D;eval(input())\nif a&lt;&#x3D;0 or b&lt;&#x3D;0:\n    print(&quot;illegal data&quot;)\nelif a&#x3D;&#x3D;b:\n    print(&quot;It&#39;s a square&quot;)\nelse:\n    print(&quot;It&#39;s a rectangle&quot;)</code></pre>\n<h3 id=\"6-B-15-评奖系统\"><a href=\"#6-B-15-评奖系统\" class=\"headerlink\" title=\"6.B.15 评奖系统\"></a>6.B.15 评奖系统</h3><p>【问题描述】</p>\n<p>编程实现学校评奖系统，（1）如果数学成绩大于等于99并且语文成绩大于等于99，获奖学金500。</p>\n<p>（2）如果数学和语文成绩都小于30，输出重修。<br>【输入形式】</p>\n<p>语文成绩</p>\n<p>数学成绩<br>【输出形式】</p>\n<p>（1）如果数学和语文成绩都大于等于99，输出:You won a scholarship of 500 yuan!</p>\n<p>（2）如果数学和语文成绩都小于30，输出:You need to relearn!</p>\n<p>【样例输入】</p>\n<p>100</p>\n<p>99<br>【样例输出】</p>\n<p>You won a scholarship of 500 yuan!<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">a&#x3D;eval(input())\nb&#x3D;eval(input())\nif a&gt;&#x3D;99 and b&gt;&#x3D;99:\n    print(&quot;You won a scholarship of 500 yuan!&quot;)\nelif a&lt;30 and b&lt;30:\n    print(&quot;You need to relearn!&quot;)</code></pre>\n<h3 id=\"6-B-16-统计字符串列表中每个字母出现的次数\"><a href=\"#6-B-16-统计字符串列表中每个字母出现的次数\" class=\"headerlink\" title=\"6.B.16 统计字符串列表中每个字母出现的次数\"></a>6.B.16 统计字符串列表中每个字母出现的次数</h3><p>【问题描述】</p>\n<p>统计字符串列表中每个字母出现的次数。<br>编写程序，使用eval()函数读入一个仅包含字符串对象的列表，然后统计该列表中每个字母出现的次数。 列表中的字符串对象仅包含小写英文字母。</p>\n<p>【输入形式】</p>\n<p>一个仅包括字符串对象的列表，且全部字符串对象中仅出现小写英文字母。</p>\n<p>【输出形式】</p>\n<p>字母,次数<br>…<br>字母,次数<br>(注意按a-z的顺序输出)</p>\n<p>【样例输入】</p>\n<p>[“aaab”, “cccdz”]</p>\n<p>【样例输出】</p>\n<p>a,3<br>b,1<br>c,3<br>d,1<br>z,1<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">lst&#x3D;eval(input())\nalpha&#x3D;[]\ntimes&#x3D;[]\nfor x in lst:\n    for y in x:\n        if y not in alpha:\n            alpha.append(y)\n            times.append(0)\nalpha&#x3D;sorted(alpha)\nfor x in lst:\n    for y in x:\n        if y in alpha:\n            times[alpha.index(y)]+&#x3D;1\nfor x in range(len(alpha)):\n    print(alpha[x],&quot;,&quot;,times[x],sep&#x3D;&quot;&quot;)</code></pre>\n<h3 id=\"6-B-17-python水仙花数\"><a href=\"#6-B-17-python水仙花数\" class=\"headerlink\" title=\"6.B.17 python水仙花数\"></a>6.B.17 python水仙花数</h3><p>【问题描述】输入一个整数，输出小于等于该整数的所有水仙花数，每行输出一个，若没有水仙花数则输出“none”</p>\n<p>“3位水仙花数”是指一个三位整数，其各位数字的3次方和等于该数本身。例如：ABC是一个“3位水仙花数”，则：A的3次方＋B的3次方＋C的3次方 &#x3D; ABC。 </p>\n<p>【输入形式】<br>整数<br>【输出形式】<br> 整数或”none”<br>【样例输入】<br>100<br>【样例输出】<br>none<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">a&#x3D;eval(input())\ntime&#x3D;0\nif a &lt;100:\n    print(&quot;none&quot;)\nelse:\n    for x in range(100,a+1):\n        if x&#x3D;&#x3D;1000:\n            break\n        bai&#x3D;x&#x2F;&#x2F;100\n        shi&#x3D;(x-100*bai)&#x2F;&#x2F;10\n        ge&#x3D;(x-100*bai-10*shi)&#x2F;&#x2F;1\n        if bai**3+shi**3+ge**3&#x3D;&#x3D;x:\n            print(x)\n            time&#x3D;1\n    if time&#x3D;&#x3D;0:\n        print(&quot;none&quot;)</code></pre>\n<h3 id=\"6-B-18-成绩转换\"><a href=\"#6-B-18-成绩转换\" class=\"headerlink\" title=\"6.B.18 成绩转换\"></a>6.B.18 成绩转换</h3><p>【问题描述】</p>\n<p>本题要求编写程序输入一个百分制成绩并把其转换为五分制成绩输出。</p>\n<p>转换规则为：</p>\n<p>大于等于90分为A； 小于90且大于等于80为B； 小于80且大于等于70为C； 小于70且大于等于60为D； 小于60为E。</p>\n<p>【输入形式】<br>输入只有一个百分制成绩，如98.5<br>【输出形式】<br>输出对应的五分制成绩，如A<br>【样例输入1】<br>67<br>【样例输出1】<br>D<br>【样例输入2】<br>94.5<br>【样例输出2】<br>A<br>【代码实现】</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">score&#x3D;eval(input())\nif score&gt;&#x3D;90:\n    print(&quot;A&quot;)\nelif score&gt;&#x3D;80:\n    print(&quot;B&quot;)\nelif score&gt;&#x3D;70:\n    print(&quot;C&quot;)\nelif score&gt;&#x3D;60:\n    print(&quot;D&quot;)\nelse:\n    print(&quot;E&quot;)</code></pre>","feature":false,"text":"Chapter6. 循环6.A 程序片段练习6.A.1 列表元素循环右移一位【问题描述】 以下列表里所有元素循环右移一位。请补充函数体。 【输入形式】 输入列表的元素，以逗号隔开【输出形式】 循环右移一位后的列表 【样例输入】 1,2,3,4,5【样例输出】 [‘5’, ‘1’,...","link":"","photos":[],"count_time":{"symbolsCount":"17k","symbolsTime":"15 mins."},"categories":[{"name":"Learning","slug":"Learning","count":3,"path":"api/categories/Learning.json"},{"name":"Coding","slug":"Learning/Coding","count":3,"path":"api/categories/Learning/Coding.json"},{"name":"Python","slug":"Learning/Coding/Python","count":3,"path":"api/categories/Learning/Coding/Python.json"}],"tags":[{"name":"weekly","slug":"weekly","count":4,"path":"api/tags/weekly.json"},{"name":"life","slug":"life","count":3,"path":"api/tags/life.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Chapter6-%E5%BE%AA%E7%8E%AF\"><span class=\"toc-text\">Chapter6. 循环</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-A-%E7%A8%8B%E5%BA%8F%E7%89%87%E6%AE%B5%E7%BB%83%E4%B9%A0\"><span class=\"toc-text\">6.A 程序片段练习</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-A-1-%E5%88%97%E8%A1%A8%E5%85%83%E7%B4%A0%E5%BE%AA%E7%8E%AF%E5%8F%B3%E7%A7%BB%E4%B8%80%E4%BD%8D\"><span class=\"toc-text\">6.A.1 列表元素循环右移一位</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-A-2-%E6%9C%AC%E9%87%91%E4%B8%8E%E5%B9%B4%E5%88%A9%E7%8E%87\"><span class=\"toc-text\">6.A.2 本金与年利率</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-A-3-%E5%8D%96%E8%A5%BF%E7%93%9C\"><span class=\"toc-text\">6.A.3 卖西瓜</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-A-4-%E5%A4%9A%E9%A1%B9%E6%B1%82%E5%92%8C\"><span class=\"toc-text\">6.A.4 多项求和</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-A-5-%E8%AE%A1%E7%AE%97e\"><span class=\"toc-text\">6.A.5 计算e</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-A-6-%E5%81%B6%E6%95%B0%E5%92%8C\"><span class=\"toc-text\">6.A.6 偶数和</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-A-7-%E6%95%B4%E6%95%B0%E7%9A%84%E5%90%84%E4%BD%8D%E6%95%B0%E5%AD%97%E4%B9%8B%E5%92%8C\"><span class=\"toc-text\">6.A.7 整数的各位数字之和</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-A-8-%E6%98%AF%E5%90%A6%E5%8C%85%E5%90%AB%E6%95%B0%E5%AD%975\"><span class=\"toc-text\">6.A.8 是否包含数字5</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-A-9-%E4%BA%8C%E6%9C%88%E7%9A%84%E5%A4%A9%E6%95%B0\"><span class=\"toc-text\">6.A.9 二月的天数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-A-10-%E8%AE%A1%E7%AE%97%E4%B8%AA%E4%BA%BA%E6%89%80%E5%BE%97%E7%A8%8E%E5%92%8C%E5%B7%A5%E8%B5%84\"><span class=\"toc-text\">6.A.10 计算个人所得税和工资</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-B-%E5%AE%8C%E6%95%B4%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0\"><span class=\"toc-text\">6.B 完整编程练习</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-B-1-%E5%8A%A0%E5%AF%86%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">6.B.1 加密数据</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-B-2-%E9%AB%98%E5%BA%A6%E5%8F%8D%E5%BC%B9\"><span class=\"toc-text\">6.B.2 高度反弹</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-B-3-%E6%89%BE%E5%AD%A6%E7%94%9F\"><span class=\"toc-text\">6.B.3 找学生</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-B-4-%E6%95%B0%E5%88%97%E6%B1%82%E5%92%8C\"><span class=\"toc-text\">6.B.4 数列求和</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-B-5-%E7%B4%AF%E7%A7%AF%E6%B1%82%E5%92%8C\"><span class=\"toc-text\">6.B.5 累积求和</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-B-6-%E5%9B%9E%E6%96%87%E7%B4%A0%E6%95%B0\"><span class=\"toc-text\">6.B.6 回文素数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-B-7-%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%97\"><span class=\"toc-text\">6.B.7 组合数字</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-B-8-%E9%A2%9C%E8%89%B2%E6%B7%B7%E5%90%88%E5%99%A8\"><span class=\"toc-text\">6.B.8 颜色混合器</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-B-9-%E8%BD%AE%E7%9B%98%E8%B5%8C%E7%9A%84%E9%A2%9C%E8%89%B2\"><span class=\"toc-text\">6.B.9 轮盘赌的颜色</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-B-10-%E6%9C%88%E4%BB%BD%E5%AF%B9%E5%BA%94%E7%9A%84%E5%AD%A3%E8%8A%82\"><span class=\"toc-text\">6.B.10 月份对应的季节</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-B-11-%E5%AD%97%E7%AC%A6%E7%BB%9F%E8%AE%A1\"><span class=\"toc-text\">6.B.11 字符统计</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-B-12-%E5%88%86%E6%AE%B5%E5%87%BD%E6%95%B0%E6%B1%82%E5%80%BC\"><span class=\"toc-text\">6.B.12 分段函数求值</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-B-13-%E7%BE%8E%E5%85%83%E4%BA%BA%E6%B0%91%E5%B8%81%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">6.B.13 美元人民币转换</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-B-14-%E5%88%A4%E6%96%AD%E6%AD%A3%E6%96%B9%E5%BD%A2\"><span class=\"toc-text\">6.B.14 判断正方形</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-B-15-%E8%AF%84%E5%A5%96%E7%B3%BB%E7%BB%9F\"><span class=\"toc-text\">6.B.15 评奖系统</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-B-16-%E7%BB%9F%E8%AE%A1%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%88%97%E8%A1%A8%E4%B8%AD%E6%AF%8F%E4%B8%AA%E5%AD%97%E6%AF%8D%E5%87%BA%E7%8E%B0%E7%9A%84%E6%AC%A1%E6%95%B0\"><span class=\"toc-text\">6.B.16 统计字符串列表中每个字母出现的次数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-B-17-python%E6%B0%B4%E4%BB%99%E8%8A%B1%E6%95%B0\"><span class=\"toc-text\">6.B.17 python水仙花数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-B-18-%E6%88%90%E7%BB%A9%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">6.B.18 成绩转换</span></a></li></ol></li></ol></li></ol>","author":{"name":"Krodnel","slug":"blog-author","avatar":"https://s1.ax1x.com/2022/03/06/brFqER.png","link":"/","description":"I don't live in a dream <br /> The dream is my reality","socials":{"github":"https://github.com/godofborder","twitter":"https://twitter.com/godofborder","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-line.svg","link":"https://space.bilibili.com/34360575"},"QQ":{"icon":"/svg/QQ.svg","link":"http://wpa.qq.com/msgrd?v=3&uin=2632954297&site=qq&menu=yes"},"netease":{"icon":"/svg/netease.svg","link":"http://music.163.com/playlist?id=688977586&userid=337229589"},"steam":{"icon":"/svg/steam.svg","link":"https://steamcommunity.com/id/Krodnel/"}}}},"mapped":true,"prev_post":{"title":"2022-April","uid":"8e7b2ceb716fa18b859880548cebfa73","slug":"2022-Apr","date":"2022-04-02T15:33:46.000Z","updated":"2022-04-02T15:44:14.679Z","comments":true,"path":"api/articles/2022-Apr.json","keywords":null,"cover":"https://s1.ax1x.com/2022/04/02/qTiegJ.png","text":"你是人间四月天！4.2 春の序-四月要更加努力啊-为了想要的生活-为了人间的烟火气-为了今天的风和月 ","link":"","photos":[],"count_time":{"symbolsCount":52,"symbolsTime":"1 mins."},"categories":[{"name":"Thoughts","slug":"Thoughts","count":9,"path":"api/categories/Thoughts.json"}],"tags":[{"name":"Life","slug":"Life","count":9,"path":"api/tags/Life.json"},{"name":"Monthly","slug":"Monthly","count":9,"path":"api/tags/Monthly.json"}],"author":{"name":"Krodnel","slug":"blog-author","avatar":"https://s1.ax1x.com/2022/03/06/brFqER.png","link":"/","description":"I don't live in a dream <br /> The dream is my reality","socials":{"github":"https://github.com/godofborder","twitter":"https://twitter.com/godofborder","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-line.svg","link":"https://space.bilibili.com/34360575"},"QQ":{"icon":"/svg/QQ.svg","link":"http://wpa.qq.com/msgrd?v=3&uin=2632954297&site=qq&menu=yes"},"netease":{"icon":"/svg/netease.svg","link":"http://music.163.com/playlist?id=688977586&userid=337229589"},"steam":{"icon":"/svg/steam.svg","link":"https://steamcommunity.com/id/Krodnel/"}}}}},"next_post":{"title":"PYTHON第4章基础习题","uid":"da3d3c8426ca2b127d2146bea8ac8e9f","slug":"python-cp4","date":"2022-03-12T03:48:27.000Z","updated":"2023-03-09T09:36:31.166Z","comments":true,"path":"api/articles/python-cp4.json","keywords":null,"cover":"https://s1.ax1x.com/2022/03/14/bjepjg.jpg","text":"Chapter4.列表4.1 删除列表中的最大元素和最小元素【问题描述】 读入一个整数列表，输出删除最大元素和最小元素后的列表。最大元素和最小元素可能有多个。【输入形式】 输入列表，包括方括号【输出形式】 直接用print输出列表【样例输入】 [1,2,3,4,5,6,1,7,7...","link":"","photos":[],"count_time":{"symbolsCount":"6.5k","symbolsTime":"6 mins."},"categories":[{"name":"Learning","slug":"Learning","count":3,"path":"api/categories/Learning.json"},{"name":"Coding","slug":"Learning/Coding","count":3,"path":"api/categories/Learning/Coding.json"},{"name":"Python","slug":"Learning/Coding/Python","count":3,"path":"api/categories/Learning/Coding/Python.json"}],"tags":[{"name":"weekly","slug":"weekly","count":4,"path":"api/tags/weekly.json"},{"name":"life","slug":"life","count":3,"path":"api/tags/life.json"}],"author":{"name":"Krodnel","slug":"blog-author","avatar":"https://s1.ax1x.com/2022/03/06/brFqER.png","link":"/","description":"I don't live in a dream <br /> The dream is my reality","socials":{"github":"https://github.com/godofborder","twitter":"https://twitter.com/godofborder","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili-line.svg","link":"https://space.bilibili.com/34360575"},"QQ":{"icon":"/svg/QQ.svg","link":"http://wpa.qq.com/msgrd?v=3&uin=2632954297&site=qq&menu=yes"},"netease":{"icon":"/svg/netease.svg","link":"http://music.163.com/playlist?id=688977586&userid=337229589"},"steam":{"icon":"/svg/steam.svg","link":"https://steamcommunity.com/id/Krodnel/"}}}},"feature":false}}