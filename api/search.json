[{"id":"da3d3c8426ca2b127d2146bea8ac8e9f","title":"PYTHON第4章基础习题","content":"Chapter4.列表4.1 删除列表中的最大元素和最小元素【问题描述】\n读入一个整数列表，输出删除最大元素和最小元素后的列表。最大元素和最小元素可能有多个。【输入形式】\n输入列表，包括方括号【输出形式】\n直接用print输出列表【样例输入】\n[1,2,3,4,5,6,1,7,7]【样例输出】\n[2, 3, 4, 5, 6]【代码实现】\na&#x3D;eval(input())\nmax&#x3D;max(a)\nmin&#x3D;min(a)\na&#x3D;[i for i in a if i!&#x3D;max and i!&#x3D;min]\nprint(a)\n\n4.2 把姓名和成绩列表合并后按照成绩升序排列【问题描述】\n已知一个列表存放学生姓名，另外一个列表存放学生成绩。把姓名和成绩配对后，形成一个嵌套列表，按照成绩升序输出列表。【输入形式】\n第一行输入姓名，每个姓名用逗号分隔。第二行输入成绩，按照逗号分隔。【输出形式】\n直接用print输出列表【样例输入】\ntom,james,jack\n89,34,78【样例输出】\n[[‘james’, 34], [‘jack’, 78], [‘tom’, 89]]【代码实现】\nfrom operator import itemgetter\nnames&#x3D;input().split(&quot;,&quot;)\ngrades&#x3D;eval(input())\nlst&#x3D;[[],[],[]]\nx&#x3D;0\nfor i in names:\n    lst[x].append(i)\n    x+&#x3D;1\nx&#x3D;0\nfor i in grades:\n    lst[x].append(i)\n    x+&#x3D;1\nlst&#x3D;sorted(lst,key&#x3D;itemgetter(1))\nprint(lst)\n\n\n4.3 把分布在两个列表中的姓名和成绩配对后形成一个列表【问题描述】\n已知一个列表中存放的是一些学生的姓名，另外一个列表存放的是学生对应的考试成绩。两个列表长度相同。要求，把姓名和对应的成绩进行组合，形成一个列表。该列表包含一个嵌套列表，每个子列都是姓名和对应的成绩。最后输出形成的新列表。【输入形式】\n分两行输入，第一行输入姓名，按照字符串的方式输入，多个姓名之间用逗号分隔。第二行输入成绩，包含方括号，元素之间用英文逗号分隔。【输出形式】\n直接用print输出新的列表。【样例输入】\ntom,jack,jone,mike\n[88,89,34,90]【样例输出】\n[[‘tom’, 88], [‘jack’, 89], [‘jone’, 34], [‘mike’, 90]]【代码实现】\nnames&#x3D;input().split(&quot;,&quot;)\ngrades&#x3D;eval(input())\nlst&#x3D;[[],[],[]]\nx&#x3D;0\nfor i in names:\n    lst[x].append(i)\n    x+&#x3D;1\nx&#x3D;0\nfor i in grades:\n    lst[x].append(i)\n    x+&#x3D;1\nprint(lst)\n\n\n4.4 生成指定长度的等差数列【问题描述】\n输入三个正整数n，m，l，生成指定长度的等差数列，存入列表中。其中n表示起始值，m表示列表元素的数量，l表示公差。【输入形式】\n在同一行输入n，m，l三个值，中间用英文逗号分隔。【输出形式】\n打印输出列表【样例输入】\n2,3,2【样例输出】\n[2, 4, 6]\n【样例说明】\n第一个数字表示数列的起始值，第二个数字表示数据的个数，第三个数字表示差。【代码实现】\nn,m,l&#x3D;input().split(&quot;,&quot;)\nn&#x3D;int(n)\nm&#x3D;int(m)\nl&#x3D;int(l)\nlst&#x3D;[x for x in range(n,n+m*l,l)]\nprint(lst)\n\n\n4.5 删除列表中指定位置的元素【问题描述】\n读入一个列表lst和正整数n和m，然后删除n~m之间的元素，不包括m位置的元素，其中n小于或者等于m。如果输入的n和m不在列表lst的下标范围内，则输出”error”。【输入形式】\n第一行输入列表。包含方括号，列表元素用逗号分隔。\n第二行输入两个整数n和m，中间用一个逗号分割。【输出形式】\n直接用print输出列表【样例输入1】\n[1,2,3,4,5,6,7]\n2,3【样例输出1】\n[1,2,4,5,6,7]\n【样例输入2】\n[1,2,3,4,5,6]\n7,3【样例输出2】\nerror\n【样例说明】\n样例1：输入列表[1,2,3,4,5,6,7]和正整数2,3，则删除列表第2位置元素，打印输出[1,2,4,5,6,7]\n样例2：输入列表[1,2,3,4,5,6]和正整数7,3，7不在列表下标的范围之内，输出“error”【代码实现】\nlst&#x3D;eval(input())\nn,m&#x3D;input().split(&quot;,&quot;)\nn&#x3D;int(n)\nm&#x3D;int(m)\nif n &gt;&#x3D; len(lst) or m &gt;&#x3D;len(lst):\n    print(&quot;error&quot;)\nelse: \n    del lst[n:m]\n    print(lst)\n\n\n4.6 找出自然数列表中的素数，并放入另外一个列表，然后输出找出的素数【问题描述】\n读入一个自然数构成的列表，找出其中的每一个素数，然后放入另外一个列表，并输出这个列表。【输入形式】\n按照列表的形式输入，包括方括号，元素之间用逗号分隔。【输出形式】\n直接用print输出列表【样例输入】\n[2,3,5,7,9,11,23]\n【样例输出】\n[2, 3, 5, 7, 11, 23]【代码实现】\nlst&#x3D;eval(input())\nout&#x3D;[]\nfor x in lst:\n    if x&gt;1:\n        for i in range(2,x):\n            if x%i&#x3D;&#x3D;0:\n                break\n        else:\n            out.append(x)\nprint(out)\n\n\n4.7 计算整数列表平均值(根据结果判断是否输出小数部分）【问题描述】\n输入一个整数列表，计算所有元素的平均值，如果结果中小数为0，请只输出整数部分，如果结果中的小数部分不为0，则输出结果保留两位小数。【输入形式】\n从键盘输入列表，包含方括号，列表元素用逗号分隔。\n【输出形式】\n纯整数，或者带两位小数的浮点数【样例输入1】\n[1,2,3,4,5]【样例输出1】\n3\n【样例输入2】\n[2,2,3,7,5,1]【样例输出2】\n3.33【代码实现】\nlst&#x3D;eval(input())\nsum&#x3D;0\nfor x in lst:\n    sum&#x3D;sum+x\nout&#x3D;sum&#x2F;len(lst)\nif out%1&#x3D;&#x3D;0:\n    print(&quot;%d&quot;%(out))\nelse:\n    print(&quot;%.2f&quot;%(out))\n\n\n4.8 计算整数列表的平均值【问题描述】\n输入一个整数列表，计算所有元素的平均值。结果保留两位小数。输入数据用逗号分隔【输入形式】\n从键盘输入一个整数列表，包括方括号，元素逗号分隔【输出形式】\n输出所有元素的平均值，结果保留两位小数\n【样例输入】\n[1,2,3,4,5]\n【样例输出】\n3.00【代码实现】\nlst&#x3D;eval(input())\nsum&#x3D;0\nfor x in lst:\n    sum&#x3D;sum+x\nprint(&quot;%.2f&quot;%(sum&#x2F;len(lst)))\n\n\n4.9 交换列表中两个元素的值，并输出列表【问题描述】\n输入一个由字符串构成的列表和两个整数n和m（n和m在输入列表的下标范围以内），交换其中两个元素的值，打印输出交换后的列表。【输入形式】\n第一行输入由空格分隔的多个字符串\n第二行输入两个整数n和m，表示元素的位置，两个数字之间用空格区分。【输出形式】\n直接使用print函数输出列表【样例输入1】\nhello world python is great\n2 3【样例输出1】\n[‘hello’, ‘world’, ‘is’, ‘python’, ‘great’]\n【样例输入2】\nhello world python is great\n-2 3【样例输出2】\n[‘hello’, ‘world’, ‘python’, ‘is’, ‘great’]【代码实现】\nlst&#x3D;input().split(&#39; &#39;)\nn,m&#x3D;input().split(&#39; &#39;)\nn&#x3D;int(n)\nm&#x3D;int(m)\nl&#x3D;&#39;1&#39;\nl&#x3D;lst[n]\nlst[n]&#x3D;lst[m]\nlst[m]&#x3D;l\nprint(lst)\n\n\n4.10 删除列表中的重复值【问题描述】\n输入一个列表，删除其中的重复值，再输出。\n要求：假设列表中存在k个值为a的元素，删除前k-1个元素，保留最后一个。 不同元素在列表中的相对位置不应被改变。\n【输入形式】\n[元素1， 元素2, … , 元素n]\n【输出形式】\n[元素1，元素2, … , 元素k]\n【样例输入】\n[4,3,2,3,2,4,True]【样例输出】\n[3, 2, 4, True]【代码实现】\nlst&#x3D;eval(input())\nout&#x3D;[]\nfor x in range(0,len(lst)):\n    if (lst[x] in lst[x+1:])!&#x3D;True:\n        out.append(lst[x])\nprint(out)\n\n\n4.11 列表生成及循环左移【问题描述】\n从键盘读入一个整数n, 并完成下述任务：\n1·使用快速列表生成语法生成列表 [1, 2, … ,n-1, n];\n2·使用for循环将列表循环左移一个位置；\n3·输出循环左移后的列表。\n【输入形式】\nn\n【输出形式】\n[2, 3, … , n, 1]\n【样例输入】\n5【样例输出】\n[2, 3, 4, 5, 1]【代码实现】\nn&#x3D;eval(input())\nlst&#x3D;[x for x in range(1,n+1)]\nlst.append(lst[0])\nfor x in range(0,len(lst)-1):\n    lst[x]&#x3D;lst[x+1]\nlst.pop()\nprint(lst)\n\n\n4.12 把列表里面的个位正整数组合成一个最大的整数【问题描述】\n读入一个正整数列表，每个正整数都只有一位。把这些列表里面的数字，按位数组织成一个最大的整数，每个数字占据一位，不能重复使用。然后输出这个数字。例如列表[1,2,3,4] 可以组成1234, 或者4321等多个整数。输出最大整数。【输入形式】\n一个包含一位自然数的列表【输出形式】\n整数【样例输入】\n[0,1,2,3,2]【样例输出】\n32210【代码实现】\nlst&#x3D;eval(input())\nlst&#x3D;sorted(lst,reverse&#x3D;True)\nif lst.count(0)&#x3D;&#x3D;len(lst):\n    print(&quot;0&quot;)\nelse:    \n    for x in lst:\n        print(x,end&#x3D;&#39;&#39;)\n\n\n\n4.13 在列表中找出只出现一次的元素，并排序输出【问题描述】\n输入一个自然数列表，找出只出现一次的元素，并升序输出。如果没有只出现一次的元素，则输出False。【输入形式】\n输入包含自然数的列表，包括方括号，逗号分隔【输出形式】\n排序后的数字，每个数字之间用英文逗号分隔。或者False。【样例输入1】\n[1,2,3,5,2,3,4]【样例输出1】\n1,4,5\n【样例输入2】\n[9,9,9,12,12]【样例输出2】\nFalse【代码实现】\nlst&#x3D;eval(input())\nout&#x3D;[]\nfor x in lst:\n    time&#x3D;0\n    for i in lst:\n        if x&#x3D;&#x3D;i:\n            time+&#x3D;1\n    if time&#x3D;&#x3D;1:\n        out.append(x)\nout&#x3D;sorted(out)\nif len(out)&#x3D;&#x3D;0:\n    print(&quot;False&quot;)\nelse:\n    for x in out:\n        if out.index(x)!&#x3D;len(out)-1:\n            print(x,end&#x3D;&#39;,&#39;)\n        else:\n            print(x)\n\n\n4.14  把列表中数值为0的元素移动到列表的尾端，其他元素相对顺序不变【问题描述】\n读入一个整数列表，把数值为0的元素移动到列表尾部，其他元素的相对顺序不变。输出调整后的列表。【输入形式】\n按照列表的形式输入，包括方块号，逗号分隔。【输出形式】\n直接使用print打印【样例输入】\n[1,0,2,0,3,0,4]\n【样例输出】\n[1, 2, 3, 4, 0, 0, 0]【代码实现】\nlst&#x3D;eval(input())\nfor x in lst:\n    if x&#x3D;&#x3D;0:\n        lst.remove(x)\n        lst.append(0)\nprint(lst)\n\n\n4.15 从一个列表中取出第n个元素，并重复m次，放到末尾，然后输出列表【问题描述】\n输入一个整数列表和整数n(n可以是负数）和正整数m，从该列表中选择第n个元素，把该元素重复m次，然后放到列表的尾端，最后输出列表。如果输入的n值不在列表下标范围之内，则输出”error”【输入形式】\n输入时，第一行输入列表的元素，用英文逗号分隔。\n第二行输入两个数字n和m，用英文逗号分隔。\n【输出形式】\n直接使用print输出列表【样例输入1】\n1,2,3,4,5\n2,3【样例输出1】\n[1, 2, 3, 4, 5, 3, 3, 3]\n【样例输入2】\n1,2,3,4,5\n5,3【样例输出2】\nerror【代码实现】\nlst&#x3D;eval(input())\nlst&#x3D;list(lst)\nn,m&#x3D;eval(input())\nif n&gt;&#x3D;len(lst):\n    print(&quot;error&quot;)\nelse:\n    a&#x3D;lst[n]\n    for x in range(0,m):\n        lst.append(a)\n    print(lst)\n\n\n","slug":"python-cp4","date":"2022-03-14T15:48:02.000Z","categories_index":"Learning,Coding,Python","tags_index":"life,weekly","author_index":"Krodnel"},{"id":"5c50df8da53538a708e48e649285f57a","title":"2021-December","content":"12.1 腊月祝词·序\n梦中的十二月\n雪落长街\n但雪于重庆似乎是奇迹般的存在\n二零二一年的最后一个月\n我不单希望那雪落下\n也希望自己能像那奇迹般\n于大地上振作起来\n给大学的第一学期生活画上完满句号\n岁末\n我们努力\n我们歌唱\n我们祝福\n我们，\n敬颂冬綏。\n\n\n12.2 观卷王有感\n为何他人能做到专注于作业之上\n而自己却只顾着玩\n真该醒醒了\n游戏、娱乐与学业之重要性\n整理思绪\n重装出发\n\n","slug":"2021-December","date":"2021-12-01T12:26:16.000Z","categories_index":"Thoughts","tags_index":"Life,Monthly","author_index":"Krodnel"},{"id":"a0fc5943b7a790623fb58b6f27504305","title":"2020-December","content":"12.21 数学难题\n立体几何 实在不会\n一看就会 一做就没\n啊\n我是多么的废\n\n\n12.22 关于理想\n想做的事还有很多\n但限制我的却是金钱\n以及时间\n追求高层次的精神与现实贫乏的物质\n这样的矛盾何时才能消失不见？\n\n\n12.29 怀旧有感\n怀念从前\n属于我的 旧时光\n怀念\n故事故物\n故城故景\n故人故情\n\n\n12.30 怀旧之破局\n既欲忆往昔\n何不梦未来\n悟已往之不谏\n知来者之可追\n\n\n12.31 致新年·上\n站在二零二零的这一头\n眺望远方之蓝\n新的一年\n祝愿你能取得好成绩\n画上完美的句号\n不在烦心 走出迷茫\n\n","slug":"2020-December","date":"2020-12-20T15:25:26.000Z","categories_index":"Thoughts","tags_index":"Life,Monthly","author_index":"Krodnel"},{"id":"331968bd518d7ee93cc059cb0862a51c","title":"2022-March","content":"三月已至3.6\n不知不觉间就已经三月了，天气转暖，太阳出现的次数也越来越多了，阳光明媚，正是向上生长的季节！\n\n","slug":"2022-3月序","date":"2022-03-01T14:58:23.000Z","categories_index":"Thoughts","tags_index":"Life,Monthly","author_index":"Krodnel"},{"id":"e70d99003a84ba65658bdad8766ddd8c","title":"2022-Januarary","content":"1.1 庆元旦\n二零二二\n新的一年\n万事顺意！\n\n\n1.31 大年三十·除夕\n又是一年除夕岁时\n祝愿新的一年\n一切都会好起来！\n\n","slug":"2022-Januarary","date":"2022-01-01T00:22:44.000Z","categories_index":"Thoughts","tags_index":"Life,Monthly","author_index":"Krodnel"},{"id":"92e254c391cd8ec69557e8e605f447b4","title":"2021-September","content":"\n\n\n\n\n\n\n注意\n此文章具有人身攻击属性\n\n9.28 闻丁意楷抽烟遥有此寄\n草你妈\n能不能别抽烟\n我爸在家里都躲着我抽\n你他妈在寝室里随便抽？\n我凭什么受这个气\n想折寿也别拉上我们\n自私自利的家伙\n我他妈越想越气\n你是什么寄吧\n我要让着你抽\n自己说的到阳台上抽\n忘干净了吗\n你妈的骨灰应该是早就消散了吧\n这几天暗示的还少了吗\n懂不起是吧\n硬要抽是吧\n脸色都给完了\n能不能滚啊\n我为什么要被你染上烟味啊\n一个人坏了全宿舍\n合着三个人都没勇气说吧\n老子要让你知道什么叫\n复兴民族\n誓作前锋\n\n","slug":"2021-September","date":"2021-09-26T15:26:05.000Z","categories_index":"Thoughts","tags_index":"Life,Monthly","author_index":"Krodnel"},{"id":"3dc297844e2caf37aa3a2dcdeed0355b","title":"2021-June","content":"6.5 倒计时两天\n两日后\n高考将至\n希望自己\n稳住心态\n超常发挥\n考上六百二十\n\n\n6.6 高考前夕\n离高考\n只一天\n加油呀\n\n","slug":"2021-June","date":"2021-06-04T15:25:56.000Z","categories_index":"Thoughts","tags_index":"Life,Monthly","author_index":"Krodnel"},{"id":"9cc69e8b048e5cdbf150b05780c5f373","title":"2021-Januarary","content":"1.1 致新年·下\n站在二零二一年的这一头\n回望往昔情谊\n过去的一年里收获良多\n朝着自己既定的目标前进吧\n学习也好 身体也好\n少熬夜！少玩游戏！\n衣帽裤鞋适量添置\n冲！\n今年是辛丑牛年\n那就祝自己\n牛转乾坤！\n\n\n1.12 网抑\n感觉最近学废了\n啊啊啊\n不行\n我要相信自己！\n\n\n1.22 祝一诊\n一诊加油！\n明天就是一诊了\n今天好好复习\n临时抱抱佛脚\n考个好成绩（前两百）\n加油！\n\n","slug":"2021-Januarary","date":"2021-01-01T05:25:46.000Z","categories_index":"Thoughts","tags_index":"Life,Monthly","author_index":"Krodnel"}]